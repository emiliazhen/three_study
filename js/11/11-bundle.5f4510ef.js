"use strict";(self.webpackChunkthree_study=self.webpackChunkthree_study||[]).push([[864],{8896:function(t,e,i){var s=i(9477);class n{constructor(t){void 0===t&&(t=[0,0,0,0,0,0,0,0,0]),this.elements=t}identity(){const t=this.elements;t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=0,t[7]=0,t[8]=1}setZero(){const t=this.elements;t[0]=0,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=0,t[6]=0,t[7]=0,t[8]=0}setTrace(t){const e=this.elements;e[0]=t.x,e[4]=t.y,e[8]=t.z}getTrace(t){void 0===t&&(t=new r);const e=this.elements;return t.x=e[0],t.y=e[4],t.z=e[8],t}vmult(t,e){void 0===e&&(e=new r);const i=this.elements,s=t.x,n=t.y,o=t.z;return e.x=i[0]*s+i[1]*n+i[2]*o,e.y=i[3]*s+i[4]*n+i[5]*o,e.z=i[6]*s+i[7]*n+i[8]*o,e}smult(t){for(let e=0;e<this.elements.length;e++)this.elements[e]*=t}mmult(t,e){void 0===e&&(e=new n);const i=this.elements,s=t.elements,o=e.elements,r=i[0],a=i[1],l=i[2],h=i[3],c=i[4],u=i[5],d=i[6],p=i[7],v=i[8],y=s[0],w=s[1],m=s[2],f=s[3],g=s[4],x=s[5],b=s[6],E=s[7],z=s[8];return o[0]=r*y+a*f+l*b,o[1]=r*w+a*g+l*E,o[2]=r*m+a*x+l*z,o[3]=h*y+c*f+u*b,o[4]=h*w+c*g+u*E,o[5]=h*m+c*x+u*z,o[6]=d*y+p*f+v*b,o[7]=d*w+p*g+v*E,o[8]=d*m+p*x+v*z,e}scale(t,e){void 0===e&&(e=new n);const i=this.elements,s=e.elements;for(let e=0;3!==e;e++)s[3*e+0]=t.x*i[3*e+0],s[3*e+1]=t.y*i[3*e+1],s[3*e+2]=t.z*i[3*e+2];return e}solve(t,e){void 0===e&&(e=new r);const i=[];let s,n;for(s=0;s<12;s++)i.push(0);for(s=0;s<3;s++)for(n=0;n<3;n++)i[s+4*n]=this.elements[s+3*n];i[3]=t.x,i[7]=t.y,i[11]=t.z;let o=3;const a=o;let l;let h;do{if(s=a-o,0===i[s+4*s])for(n=s+1;n<a;n++)if(0!==i[s+4*n]){l=4;do{h=4-l,i[h+4*s]+=i[h+4*n]}while(--l);break}if(0!==i[s+4*s])for(n=s+1;n<a;n++){const t=i[s+4*n]/i[s+4*s];l=4;do{h=4-l,i[h+4*n]=h<=s?0:i[h+4*n]-i[h+4*s]*t}while(--l)}}while(--o);if(e.z=i[11]/i[10],e.y=(i[7]-i[6]*e.z)/i[5],e.x=(i[3]-i[2]*e.z-i[1]*e.y)/i[0],isNaN(e.x)||isNaN(e.y)||isNaN(e.z)||e.x===1/0||e.y===1/0||e.z===1/0)throw`Could not solve equation! Got x=[${e.toString()}], b=[${t.toString()}], A=[${this.toString()}]`;return e}e(t,e,i){if(void 0===i)return this.elements[e+3*t];this.elements[e+3*t]=i}copy(t){for(let e=0;e<t.elements.length;e++)this.elements[e]=t.elements[e];return this}toString(){let t="";for(let e=0;e<9;e++)t+=this.elements[e]+",";return t}reverse(t){void 0===t&&(t=new n);const e=o;let i,s;for(i=0;i<3;i++)for(s=0;s<3;s++)e[i+6*s]=this.elements[i+3*s];e[3]=1,e[9]=0,e[15]=0,e[4]=0,e[10]=1,e[16]=0,e[5]=0,e[11]=0,e[17]=1;let r=3;const a=r;let l;let h;do{if(i=a-r,0===e[i+6*i])for(s=i+1;s<a;s++)if(0!==e[i+6*s]){l=6;do{h=6-l,e[h+6*i]+=e[h+6*s]}while(--l);break}if(0!==e[i+6*i])for(s=i+1;s<a;s++){const t=e[i+6*s]/e[i+6*i];l=6;do{h=6-l,e[h+6*s]=h<=i?0:e[h+6*s]-e[h+6*i]*t}while(--l)}}while(--r);i=2;do{s=i-1;do{const t=e[i+6*s]/e[i+6*i];l=6;do{h=6-l,e[h+6*s]=e[h+6*s]-e[h+6*i]*t}while(--l)}while(s--)}while(--i);i=2;do{const t=1/e[i+6*i];l=6;do{h=6-l,e[h+6*i]=e[h+6*i]*t}while(--l)}while(i--);i=2;do{s=2;do{if(h=e[3+s+6*i],isNaN(h)||h===1/0)throw`Could not reverse! A=[${this.toString()}]`;t.e(i,s,h)}while(s--)}while(i--);return t}setRotationFromQuaternion(t){const e=t.x,i=t.y,s=t.z,n=t.w,o=e+e,r=i+i,a=s+s,l=e*o,h=e*r,c=e*a,u=i*r,d=i*a,p=s*a,v=n*o,y=n*r,w=n*a,m=this.elements;return m[0]=1-(u+p),m[1]=h-w,m[2]=c+y,m[3]=h+w,m[4]=1-(l+p),m[5]=d-v,m[6]=c-y,m[7]=d+v,m[8]=1-(l+u),this}transpose(t){void 0===t&&(t=new n);const e=this.elements,i=t.elements;let s;return i[0]=e[0],i[4]=e[4],i[8]=e[8],s=e[1],i[1]=e[3],i[3]=s,s=e[2],i[2]=e[6],i[6]=s,s=e[5],i[5]=e[7],i[7]=s,t}}const o=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];class r{constructor(t,e,i){void 0===t&&(t=0),void 0===e&&(e=0),void 0===i&&(i=0),this.x=t,this.y=e,this.z=i}cross(t,e){void 0===e&&(e=new r);const i=t.x,s=t.y,n=t.z,o=this.x,a=this.y,l=this.z;return e.x=a*n-l*s,e.y=l*i-o*n,e.z=o*s-a*i,e}set(t,e,i){return this.x=t,this.y=e,this.z=i,this}setZero(){this.x=this.y=this.z=0}vadd(t,e){if(!e)return new r(this.x+t.x,this.y+t.y,this.z+t.z);e.x=t.x+this.x,e.y=t.y+this.y,e.z=t.z+this.z}vsub(t,e){if(!e)return new r(this.x-t.x,this.y-t.y,this.z-t.z);e.x=this.x-t.x,e.y=this.y-t.y,e.z=this.z-t.z}crossmat(){return new n([0,-this.z,this.y,this.z,0,-this.x,-this.y,this.x,0])}normalize(){const t=this.x,e=this.y,i=this.z,s=Math.sqrt(t*t+e*e+i*i);if(s>0){const t=1/s;this.x*=t,this.y*=t,this.z*=t}else this.x=0,this.y=0,this.z=0;return s}unit(t){void 0===t&&(t=new r);const e=this.x,i=this.y,s=this.z;let n=Math.sqrt(e*e+i*i+s*s);return n>0?(n=1/n,t.x=e*n,t.y=i*n,t.z=s*n):(t.x=1,t.y=0,t.z=0),t}length(){const t=this.x,e=this.y,i=this.z;return Math.sqrt(t*t+e*e+i*i)}lengthSquared(){return this.dot(this)}distanceTo(t){const e=this.x,i=this.y,s=this.z,n=t.x,o=t.y,r=t.z;return Math.sqrt((n-e)*(n-e)+(o-i)*(o-i)+(r-s)*(r-s))}distanceSquared(t){const e=this.x,i=this.y,s=this.z,n=t.x,o=t.y,r=t.z;return(n-e)*(n-e)+(o-i)*(o-i)+(r-s)*(r-s)}scale(t,e){void 0===e&&(e=new r);const i=this.x,s=this.y,n=this.z;return e.x=t*i,e.y=t*s,e.z=t*n,e}vmul(t,e){return void 0===e&&(e=new r),e.x=t.x*this.x,e.y=t.y*this.y,e.z=t.z*this.z,e}addScaledVector(t,e,i){return void 0===i&&(i=new r),i.x=this.x+t*e.x,i.y=this.y+t*e.y,i.z=this.z+t*e.z,i}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}isZero(){return 0===this.x&&0===this.y&&0===this.z}negate(t){return void 0===t&&(t=new r),t.x=-this.x,t.y=-this.y,t.z=-this.z,t}tangents(t,e){const i=this.length();if(i>0){const s=a,n=1/i;s.set(this.x*n,this.y*n,this.z*n);const o=l;Math.abs(s.x)<.9?(o.set(1,0,0),s.cross(o,t)):(o.set(0,1,0),s.cross(o,t)),s.cross(t,e)}else t.set(1,0,0),e.set(0,1,0)}toString(){return`${this.x},${this.y},${this.z}`}toArray(){return[this.x,this.y,this.z]}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}lerp(t,e,i){const s=this.x,n=this.y,o=this.z;i.x=s+(t.x-s)*e,i.y=n+(t.y-n)*e,i.z=o+(t.z-o)*e}almostEquals(t,e){return void 0===e&&(e=1e-6),!(Math.abs(this.x-t.x)>e||Math.abs(this.y-t.y)>e||Math.abs(this.z-t.z)>e)}almostZero(t){return void 0===t&&(t=1e-6),!(Math.abs(this.x)>t||Math.abs(this.y)>t||Math.abs(this.z)>t)}isAntiparallelTo(t,e){return this.negate(h),h.almostEquals(t,e)}clone(){return new r(this.x,this.y,this.z)}}r.ZERO=new r(0,0,0),r.UNIT_X=new r(1,0,0),r.UNIT_Y=new r(0,1,0),r.UNIT_Z=new r(0,0,1);const a=new r,l=new r,h=new r;class c{constructor(t){void 0===t&&(t={}),this.lowerBound=new r,this.upperBound=new r,t.lowerBound&&this.lowerBound.copy(t.lowerBound),t.upperBound&&this.upperBound.copy(t.upperBound)}setFromPoints(t,e,i,s){const n=this.lowerBound,o=this.upperBound,r=i;n.copy(t[0]),r&&r.vmult(n,n),o.copy(n);for(let e=1;e<t.length;e++){let i=t[e];r&&(r.vmult(i,u),i=u),i.x>o.x&&(o.x=i.x),i.x<n.x&&(n.x=i.x),i.y>o.y&&(o.y=i.y),i.y<n.y&&(n.y=i.y),i.z>o.z&&(o.z=i.z),i.z<n.z&&(n.z=i.z)}return e&&(e.vadd(n,n),e.vadd(o,o)),s&&(n.x-=s,n.y-=s,n.z-=s,o.x+=s,o.y+=s,o.z+=s),this}copy(t){return this.lowerBound.copy(t.lowerBound),this.upperBound.copy(t.upperBound),this}clone(){return(new c).copy(this)}extend(t){this.lowerBound.x=Math.min(this.lowerBound.x,t.lowerBound.x),this.upperBound.x=Math.max(this.upperBound.x,t.upperBound.x),this.lowerBound.y=Math.min(this.lowerBound.y,t.lowerBound.y),this.upperBound.y=Math.max(this.upperBound.y,t.upperBound.y),this.lowerBound.z=Math.min(this.lowerBound.z,t.lowerBound.z),this.upperBound.z=Math.max(this.upperBound.z,t.upperBound.z)}overlaps(t){const e=this.lowerBound,i=this.upperBound,s=t.lowerBound,n=t.upperBound,o=s.x<=i.x&&i.x<=n.x||e.x<=n.x&&n.x<=i.x,r=s.y<=i.y&&i.y<=n.y||e.y<=n.y&&n.y<=i.y,a=s.z<=i.z&&i.z<=n.z||e.z<=n.z&&n.z<=i.z;return o&&r&&a}volume(){const t=this.lowerBound,e=this.upperBound;return(e.x-t.x)*(e.y-t.y)*(e.z-t.z)}contains(t){const e=this.lowerBound,i=this.upperBound,s=t.lowerBound,n=t.upperBound;return e.x<=s.x&&i.x>=n.x&&e.y<=s.y&&i.y>=n.y&&e.z<=s.z&&i.z>=n.z}getCorners(t,e,i,s,n,o,r,a){const l=this.lowerBound,h=this.upperBound;t.copy(l),e.set(h.x,l.y,l.z),i.set(h.x,h.y,l.z),s.set(l.x,h.y,h.z),n.set(h.x,l.y,h.z),o.set(l.x,h.y,l.z),r.set(l.x,l.y,h.z),a.copy(h)}toLocalFrame(t,e){const i=d,s=i[0],n=i[1],o=i[2],r=i[3],a=i[4],l=i[5],h=i[6],c=i[7];this.getCorners(s,n,o,r,a,l,h,c);for(let e=0;8!==e;e++){const s=i[e];t.pointToLocal(s,s)}return e.setFromPoints(i)}toWorldFrame(t,e){const i=d,s=i[0],n=i[1],o=i[2],r=i[3],a=i[4],l=i[5],h=i[6],c=i[7];this.getCorners(s,n,o,r,a,l,h,c);for(let e=0;8!==e;e++){const s=i[e];t.pointToWorld(s,s)}return e.setFromPoints(i)}overlapsRay(t){const{direction:e,from:i}=t,s=1/e.x,n=1/e.y,o=1/e.z,r=(this.lowerBound.x-i.x)*s,a=(this.upperBound.x-i.x)*s,l=(this.lowerBound.y-i.y)*n,h=(this.upperBound.y-i.y)*n,c=(this.lowerBound.z-i.z)*o,u=(this.upperBound.z-i.z)*o,d=Math.max(Math.max(Math.min(r,a),Math.min(l,h)),Math.min(c,u)),p=Math.min(Math.min(Math.max(r,a),Math.max(l,h)),Math.max(c,u));return!(p<0)&&!(d>p)}}const u=new r,d=[new r,new r,new r,new r,new r,new r,new r,new r];class p{constructor(){this.matrix=[]}get(t,e){let{index:i}=t,{index:s}=e;if(s>i){const t=s;s=i,i=t}return this.matrix[(i*(i+1)>>1)+s-1]}set(t,e,i){let{index:s}=t,{index:n}=e;if(n>s){const t=n;n=s,s=t}this.matrix[(s*(s+1)>>1)+n-1]=i?1:0}reset(){for(let t=0,e=this.matrix.length;t!==e;t++)this.matrix[t]=0}setNumObjects(t){this.matrix.length=t*(t-1)>>1}}class v{addEventListener(t,e){void 0===this._listeners&&(this._listeners={});const i=this._listeners;return void 0===i[t]&&(i[t]=[]),i[t].includes(e)||i[t].push(e),this}hasEventListener(t,e){if(void 0===this._listeners)return!1;const i=this._listeners;return!(void 0===i[t]||!i[t].includes(e))}hasAnyEventListener(t){if(void 0===this._listeners)return!1;return void 0!==this._listeners[t]}removeEventListener(t,e){if(void 0===this._listeners)return this;const i=this._listeners;if(void 0===i[t])return this;const s=i[t].indexOf(e);return-1!==s&&i[t].splice(s,1),this}dispatchEvent(t){if(void 0===this._listeners)return this;const e=this._listeners[t.type];if(void 0!==e){t.target=this;for(let i=0,s=e.length;i<s;i++)e[i].call(this,t)}return this}}class y{constructor(t,e,i,s){void 0===t&&(t=0),void 0===e&&(e=0),void 0===i&&(i=0),void 0===s&&(s=1),this.x=t,this.y=e,this.z=i,this.w=s}set(t,e,i,s){return this.x=t,this.y=e,this.z=i,this.w=s,this}toString(){return`${this.x},${this.y},${this.z},${this.w}`}toArray(){return[this.x,this.y,this.z,this.w]}setFromAxisAngle(t,e){const i=Math.sin(.5*e);return this.x=t.x*i,this.y=t.y*i,this.z=t.z*i,this.w=Math.cos(.5*e),this}toAxisAngle(t){void 0===t&&(t=new r),this.normalize();const e=2*Math.acos(this.w),i=Math.sqrt(1-this.w*this.w);return i<.001?(t.x=this.x,t.y=this.y,t.z=this.z):(t.x=this.x/i,t.y=this.y/i,t.z=this.z/i),[t,e]}setFromVectors(t,e){if(t.isAntiparallelTo(e)){const e=w,i=m;t.tangents(e,i),this.setFromAxisAngle(e,Math.PI)}else{const i=t.cross(e);this.x=i.x,this.y=i.y,this.z=i.z,this.w=Math.sqrt(t.length()**2*e.length()**2)+t.dot(e),this.normalize()}return this}mult(t,e){void 0===e&&(e=new y);const i=this.x,s=this.y,n=this.z,o=this.w,r=t.x,a=t.y,l=t.z,h=t.w;return e.x=i*h+o*r+s*l-n*a,e.y=s*h+o*a+n*r-i*l,e.z=n*h+o*l+i*a-s*r,e.w=o*h-i*r-s*a-n*l,e}inverse(t){void 0===t&&(t=new y);const e=this.x,i=this.y,s=this.z,n=this.w;this.conjugate(t);const o=1/(e*e+i*i+s*s+n*n);return t.x*=o,t.y*=o,t.z*=o,t.w*=o,t}conjugate(t){return void 0===t&&(t=new y),t.x=-this.x,t.y=-this.y,t.z=-this.z,t.w=this.w,t}normalize(){let t=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);return 0===t?(this.x=0,this.y=0,this.z=0,this.w=0):(t=1/t,this.x*=t,this.y*=t,this.z*=t,this.w*=t),this}normalizeFast(){const t=(3-(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w))/2;return 0===t?(this.x=0,this.y=0,this.z=0,this.w=0):(this.x*=t,this.y*=t,this.z*=t,this.w*=t),this}vmult(t,e){void 0===e&&(e=new r);const i=t.x,s=t.y,n=t.z,o=this.x,a=this.y,l=this.z,h=this.w,c=h*i+a*n-l*s,u=h*s+l*i-o*n,d=h*n+o*s-a*i,p=-o*i-a*s-l*n;return e.x=c*h+p*-o+u*-l-d*-a,e.y=u*h+p*-a+d*-o-c*-l,e.z=d*h+p*-l+c*-a-u*-o,e}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w,this}toEuler(t,e){let i,s,n;void 0===e&&(e="YZX");const o=this.x,r=this.y,a=this.z,l=this.w;if("YZX"!==e)throw new Error(`Euler order ${e} not supported yet.`);{const t=o*r+a*l;if(t>.499&&(i=2*Math.atan2(o,l),s=Math.PI/2,n=0),t<-.499&&(i=-2*Math.atan2(o,l),s=-Math.PI/2,n=0),void 0===i){const e=o*o,h=r*r,c=a*a;i=Math.atan2(2*r*l-2*o*a,1-2*h-2*c),s=Math.asin(2*t),n=Math.atan2(2*o*l-2*r*a,1-2*e-2*c)}}t.y=i,t.z=s,t.x=n}setFromEuler(t,e,i,s){void 0===s&&(s="XYZ");const n=Math.cos(t/2),o=Math.cos(e/2),r=Math.cos(i/2),a=Math.sin(t/2),l=Math.sin(e/2),h=Math.sin(i/2);return"XYZ"===s?(this.x=a*o*r+n*l*h,this.y=n*l*r-a*o*h,this.z=n*o*h+a*l*r,this.w=n*o*r-a*l*h):"YXZ"===s?(this.x=a*o*r+n*l*h,this.y=n*l*r-a*o*h,this.z=n*o*h-a*l*r,this.w=n*o*r+a*l*h):"ZXY"===s?(this.x=a*o*r-n*l*h,this.y=n*l*r+a*o*h,this.z=n*o*h+a*l*r,this.w=n*o*r-a*l*h):"ZYX"===s?(this.x=a*o*r-n*l*h,this.y=n*l*r+a*o*h,this.z=n*o*h-a*l*r,this.w=n*o*r+a*l*h):"YZX"===s?(this.x=a*o*r+n*l*h,this.y=n*l*r+a*o*h,this.z=n*o*h-a*l*r,this.w=n*o*r-a*l*h):"XZY"===s&&(this.x=a*o*r-n*l*h,this.y=n*l*r-a*o*h,this.z=n*o*h+a*l*r,this.w=n*o*r+a*l*h),this}clone(){return new y(this.x,this.y,this.z,this.w)}slerp(t,e,i){void 0===i&&(i=new y);const s=this.x,n=this.y,o=this.z,r=this.w;let a,l,h,c,u,d=t.x,p=t.y,v=t.z,w=t.w;return l=s*d+n*p+o*v+r*w,l<0&&(l=-l,d=-d,p=-p,v=-v,w=-w),1-l>1e-6?(a=Math.acos(l),h=Math.sin(a),c=Math.sin((1-e)*a)/h,u=Math.sin(e*a)/h):(c=1-e,u=e),i.x=c*s+u*d,i.y=c*n+u*p,i.z=c*o+u*v,i.w=c*r+u*w,i}integrate(t,e,i,s){void 0===s&&(s=new y);const n=t.x*i.x,o=t.y*i.y,r=t.z*i.z,a=this.x,l=this.y,h=this.z,c=this.w,u=.5*e;return s.x+=u*(n*c+o*h-r*l),s.y+=u*(o*c+r*a-n*h),s.z+=u*(r*c+n*l-o*a),s.w+=u*(-n*a-o*l-r*h),s}}const w=new r,m=new r;class f{constructor(t){void 0===t&&(t={}),this.id=f.idCounter++,this.type=t.type||0,this.boundingSphereRadius=0,this.collisionResponse=!t.collisionResponse||t.collisionResponse,this.collisionFilterGroup=void 0!==t.collisionFilterGroup?t.collisionFilterGroup:1,this.collisionFilterMask=void 0!==t.collisionFilterMask?t.collisionFilterMask:-1,this.material=t.material?t.material:null,this.body=null}updateBoundingSphereRadius(){throw`computeBoundingSphereRadius() not implemented for shape type ${this.type}`}volume(){throw`volume() not implemented for shape type ${this.type}`}calculateLocalInertia(t,e){throw`calculateLocalInertia() not implemented for shape type ${this.type}`}calculateWorldAABB(t,e,i,s){throw`calculateWorldAABB() not implemented for shape type ${this.type}`}}f.idCounter=0,f.types={SPHERE:1,PLANE:2,BOX:4,COMPOUND:8,CONVEXPOLYHEDRON:16,HEIGHTFIELD:32,PARTICLE:64,CYLINDER:128,TRIMESH:256};class g{constructor(t){void 0===t&&(t={}),this.position=new r,this.quaternion=new y,t.position&&this.position.copy(t.position),t.quaternion&&this.quaternion.copy(t.quaternion)}pointToLocal(t,e){return g.pointToLocalFrame(this.position,this.quaternion,t,e)}pointToWorld(t,e){return g.pointToWorldFrame(this.position,this.quaternion,t,e)}vectorToWorldFrame(t,e){return void 0===e&&(e=new r),this.quaternion.vmult(t,e),e}static pointToLocalFrame(t,e,i,s){return void 0===s&&(s=new r),i.vsub(t,s),e.conjugate(x),x.vmult(s,s),s}static pointToWorldFrame(t,e,i,s){return void 0===s&&(s=new r),e.vmult(i,s),s.vadd(t,s),s}static vectorToWorldFrame(t,e,i){return void 0===i&&(i=new r),t.vmult(e,i),i}static vectorToLocalFrame(t,e,i,s){return void 0===s&&(s=new r),e.w*=-1,e.vmult(i,s),e.w*=-1,s}}const x=new y;class b extends f{constructor(t){void 0===t&&(t={});const{vertices:e=[],faces:i=[],normals:s=[],axes:n,boundingSphereRadius:o}=t;super({type:f.types.CONVEXPOLYHEDRON}),this.vertices=e,this.faces=i,this.faceNormals=s,0===this.faceNormals.length&&this.computeNormals(),o?this.boundingSphereRadius=o:this.updateBoundingSphereRadius(),this.worldVertices=[],this.worldVerticesNeedsUpdate=!0,this.worldFaceNormals=[],this.worldFaceNormalsNeedsUpdate=!0,this.uniqueAxes=n?n.slice():null,this.uniqueEdges=[],this.computeEdges()}computeEdges(){const t=this.faces,e=this.vertices,i=this.uniqueEdges;i.length=0;const s=new r;for(let n=0;n!==t.length;n++){const o=t[n],r=o.length;for(let t=0;t!==r;t++){const n=(t+1)%r;e[o[t]].vsub(e[o[n]],s),s.normalize();let a=!1;for(let t=0;t!==i.length;t++)if(i[t].almostEquals(s)||i[t].almostEquals(s)){a=!0;break}a||i.push(s.clone())}}}computeNormals(){this.faceNormals.length=this.faces.length;for(let t=0;t<this.faces.length;t++){for(let e=0;e<this.faces[t].length;e++)if(!this.vertices[this.faces[t][e]])throw new Error(`Vertex ${this.faces[t][e]} not found!`);const e=this.faceNormals[t]||new r;this.getFaceNormal(t,e),e.negate(e),this.faceNormals[t]=e;const i=this.vertices[this.faces[t][0]];if(e.dot(i)<0)for(let e=0;e<this.faces[t].length;e++);}}getFaceNormal(t,e){const i=this.faces[t],s=this.vertices[i[0]],n=this.vertices[i[1]],o=this.vertices[i[2]];b.computeNormal(s,n,o,e)}static computeNormal(t,e,i,s){const n=new r,o=new r;e.vsub(t,o),i.vsub(e,n),n.cross(o,s),s.isZero()||s.normalize()}clipAgainstHull(t,e,i,s,n,o,a,l,h){const c=new r;let u=-1,d=-Number.MAX_VALUE;for(let t=0;t<i.faces.length;t++){c.copy(i.faceNormals[t]),n.vmult(c,c);const e=c.dot(o);e>d&&(d=e,u=t)}const p=[];for(let t=0;t<i.faces[u].length;t++){const e=i.vertices[i.faces[u][t]],o=new r;o.copy(e),n.vmult(o,o),s.vadd(o,o),p.push(o)}u>=0&&this.clipFaceAgainstHull(o,t,e,p,a,l,h)}findSeparatingAxis(t,e,i,s,n,o,a,l){const h=new r,c=new r,u=new r,d=new r,p=new r,v=new r;let y=Number.MAX_VALUE;const w=this;if(w.uniqueAxes)for(let r=0;r!==w.uniqueAxes.length;r++){i.vmult(w.uniqueAxes[r],h);const a=w.testSepAxis(h,t,e,i,s,n);if(!1===a)return!1;a<y&&(y=a,o.copy(h))}else{const r=a?a.length:w.faces.length;for(let l=0;l<r;l++){const r=a?a[l]:l;h.copy(w.faceNormals[r]),i.vmult(h,h);const c=w.testSepAxis(h,t,e,i,s,n);if(!1===c)return!1;c<y&&(y=c,o.copy(h))}}if(t.uniqueAxes)for(let r=0;r!==t.uniqueAxes.length;r++){n.vmult(t.uniqueAxes[r],c);const a=w.testSepAxis(c,t,e,i,s,n);if(!1===a)return!1;a<y&&(y=a,o.copy(c))}else{const r=l?l.length:t.faces.length;for(let a=0;a<r;a++){const r=l?l[a]:a;c.copy(t.faceNormals[r]),n.vmult(c,c);const h=w.testSepAxis(c,t,e,i,s,n);if(!1===h)return!1;h<y&&(y=h,o.copy(c))}}for(let r=0;r!==w.uniqueEdges.length;r++){i.vmult(w.uniqueEdges[r],d);for(let r=0;r!==t.uniqueEdges.length;r++)if(n.vmult(t.uniqueEdges[r],p),d.cross(p,v),!v.almostZero()){v.normalize();const r=w.testSepAxis(v,t,e,i,s,n);if(!1===r)return!1;r<y&&(y=r,o.copy(v))}}return s.vsub(e,u),u.dot(o)>0&&o.negate(o),!0}testSepAxis(t,e,i,s,n,o){b.project(this,t,i,s,E),b.project(e,t,n,o,z);const r=E[0],a=E[1],l=z[0],h=z[1];if(r<h||l<a)return!1;const c=r-h,u=l-a;return c<u?c:u}calculateLocalInertia(t,e){const i=new r,s=new r;this.computeLocalAABB(s,i);const n=i.x-s.x,o=i.y-s.y,a=i.z-s.z;e.x=1/12*t*(2*o*2*o+2*a*2*a),e.y=1/12*t*(2*n*2*n+2*a*2*a),e.z=1/12*t*(2*o*2*o+2*n*2*n)}getPlaneConstantOfFace(t){const e=this.faces[t],i=this.faceNormals[t],s=this.vertices[e[0]];return-i.dot(s)}clipFaceAgainstHull(t,e,i,s,n,o,a){const l=new r,h=new r,c=new r,u=new r,d=new r,p=new r,v=new r,y=new r,w=this,m=s,f=[];let g=-1,x=Number.MAX_VALUE;for(let e=0;e<w.faces.length;e++){l.copy(w.faceNormals[e]),i.vmult(l,l);const s=l.dot(t);s<x&&(x=s,g=e)}if(g<0)return;const b=w.faces[g];b.connectedFaces=[];for(let t=0;t<w.faces.length;t++)for(let e=0;e<w.faces[t].length;e++)-1!==b.indexOf(w.faces[t][e])&&t!==g&&-1===b.connectedFaces.indexOf(t)&&b.connectedFaces.push(t);const E=b.length;for(let t=0;t<E;t++){const s=w.vertices[b[t]],n=w.vertices[b[(t+1)%E]];s.vsub(n,h),c.copy(h),i.vmult(c,c),e.vadd(c,c),u.copy(this.faceNormals[g]),i.vmult(u,u),e.vadd(u,u),c.cross(u,d),d.negate(d),p.copy(s),i.vmult(p,p),e.vadd(p,p);const o=b.connectedFaces[t];v.copy(this.faceNormals[o]);const r=this.getPlaneConstantOfFace(o);y.copy(v),i.vmult(y,y);const a=r-y.dot(e);for(this.clipFaceAgainstPlane(m,f,y,a);m.length;)m.shift();for(;f.length;)m.push(f.shift())}v.copy(this.faceNormals[g]);const z=this.getPlaneConstantOfFace(g);y.copy(v),i.vmult(y,y);const S=z-y.dot(e);for(let t=0;t<m.length;t++){let e=y.dot(m[t])+S;if(e<=n&&(e=n),e<=o){const i=m[t];if(e<=1e-6){const t={point:i,normal:y,depth:e};a.push(t)}}}}clipFaceAgainstPlane(t,e,i,s){let n,o;const a=t.length;if(a<2)return e;let l=t[t.length-1],h=t[0];n=i.dot(l)+s;for(let c=0;c<a;c++){if(h=t[c],o=i.dot(h)+s,n<0)if(o<0){const t=new r;t.copy(h),e.push(t)}else{const t=new r;l.lerp(h,n/(n-o),t),e.push(t)}else if(o<0){const t=new r;l.lerp(h,n/(n-o),t),e.push(t),e.push(h)}l=h,n=o}return e}computeWorldVertices(t,e){for(;this.worldVertices.length<this.vertices.length;)this.worldVertices.push(new r);const i=this.vertices,s=this.worldVertices;for(let n=0;n!==this.vertices.length;n++)e.vmult(i[n],s[n]),t.vadd(s[n],s[n]);this.worldVerticesNeedsUpdate=!1}computeLocalAABB(t,e){const i=this.vertices;t.set(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),e.set(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);for(let s=0;s<this.vertices.length;s++){const n=i[s];n.x<t.x?t.x=n.x:n.x>e.x&&(e.x=n.x),n.y<t.y?t.y=n.y:n.y>e.y&&(e.y=n.y),n.z<t.z?t.z=n.z:n.z>e.z&&(e.z=n.z)}}computeWorldFaceNormals(t){const e=this.faceNormals.length;for(;this.worldFaceNormals.length<e;)this.worldFaceNormals.push(new r);const i=this.faceNormals,s=this.worldFaceNormals;for(let n=0;n!==e;n++)t.vmult(i[n],s[n]);this.worldFaceNormalsNeedsUpdate=!1}updateBoundingSphereRadius(){let t=0;const e=this.vertices;for(let i=0;i!==e.length;i++){const s=e[i].lengthSquared();s>t&&(t=s)}this.boundingSphereRadius=Math.sqrt(t)}calculateWorldAABB(t,e,i,s){const n=this.vertices;let o,a,l,h,c,u,d=new r;for(let i=0;i<n.length;i++){d.copy(n[i]),e.vmult(d,d),t.vadd(d,d);const s=d;(void 0===o||s.x<o)&&(o=s.x),(void 0===h||s.x>h)&&(h=s.x),(void 0===a||s.y<a)&&(a=s.y),(void 0===c||s.y>c)&&(c=s.y),(void 0===l||s.z<l)&&(l=s.z),(void 0===u||s.z>u)&&(u=s.z)}i.set(o,a,l),s.set(h,c,u)}volume(){return 4*Math.PI*this.boundingSphereRadius/3}getAveragePointLocal(t){void 0===t&&(t=new r);const e=this.vertices;for(let i=0;i<e.length;i++)t.vadd(e[i],t);return t.scale(1/e.length,t),t}transformAllPoints(t,e){const i=this.vertices.length,s=this.vertices;if(e){for(let t=0;t<i;t++){const i=s[t];e.vmult(i,i)}for(let t=0;t<this.faceNormals.length;t++){const i=this.faceNormals[t];e.vmult(i,i)}}if(t)for(let e=0;e<i;e++){const i=s[e];i.vadd(t,i)}}pointIsInside(t){const e=this.vertices,i=this.faces,s=this.faceNormals,n=new r;this.getAveragePointLocal(n);for(let o=0;o<this.faces.length;o++){let a=s[o];const l=e[i[o][0]],h=new r;t.vsub(l,h);const c=a.dot(h),u=new r;n.vsub(l,u);const d=a.dot(u);if(c<0&&d>0||c>0&&d<0)return!1}return-1}static project(t,e,i,s,n){const o=t.vertices.length,r=S;let a=0,l=0;const h=B,c=t.vertices;h.setZero(),g.vectorToLocalFrame(i,s,e,r),g.pointToLocalFrame(i,s,h,h);const u=h.dot(r);l=a=c[0].dot(r);for(let t=1;t<o;t++){const e=c[t].dot(r);e>a&&(a=e),e<l&&(l=e)}if(l-=u,a-=u,l>a){const t=l;l=a,a=t}n[0]=a,n[1]=l}}const E=[],z=[],S=(new r,new r),B=new r;class A extends f{constructor(t){super({type:f.types.BOX}),this.halfExtents=t,this.convexPolyhedronRepresentation=null,this.updateConvexPolyhedronRepresentation(),this.updateBoundingSphereRadius()}updateConvexPolyhedronRepresentation(){const t=this.halfExtents.x,e=this.halfExtents.y,i=this.halfExtents.z,s=r,n=[new s(-t,-e,-i),new s(t,-e,-i),new s(t,e,-i),new s(-t,e,-i),new s(-t,-e,i),new s(t,-e,i),new s(t,e,i),new s(-t,e,i)],o=[new s(0,0,1),new s(0,1,0),new s(1,0,0)],a=new b({vertices:n,faces:[[3,2,1,0],[4,5,6,7],[5,4,0,1],[2,3,7,6],[0,4,7,3],[1,2,6,5]],axes:o});this.convexPolyhedronRepresentation=a,a.material=this.material}calculateLocalInertia(t,e){return void 0===e&&(e=new r),A.calculateInertia(this.halfExtents,t,e),e}static calculateInertia(t,e,i){const s=t;i.x=1/12*e*(2*s.y*2*s.y+2*s.z*2*s.z),i.y=1/12*e*(2*s.x*2*s.x+2*s.z*2*s.z),i.z=1/12*e*(2*s.y*2*s.y+2*s.x*2*s.x)}getSideNormals(t,e){const i=t,s=this.halfExtents;if(i[0].set(s.x,0,0),i[1].set(0,s.y,0),i[2].set(0,0,s.z),i[3].set(-s.x,0,0),i[4].set(0,-s.y,0),i[5].set(0,0,-s.z),void 0!==e)for(let t=0;t!==i.length;t++)e.vmult(i[t],i[t]);return i}volume(){return 8*this.halfExtents.x*this.halfExtents.y*this.halfExtents.z}updateBoundingSphereRadius(){this.boundingSphereRadius=this.halfExtents.length()}forEachWorldCorner(t,e,i){const s=this.halfExtents,n=[[s.x,s.y,s.z],[-s.x,s.y,s.z],[-s.x,-s.y,s.z],[-s.x,-s.y,-s.z],[s.x,-s.y,-s.z],[s.x,s.y,-s.z],[-s.x,s.y,-s.z],[s.x,-s.y,s.z]];for(let s=0;s<n.length;s++)C.set(n[s][0],n[s][1],n[s][2]),e.vmult(C,C),t.vadd(C,C),i(C.x,C.y,C.z)}calculateWorldAABB(t,e,i,s){const n=this.halfExtents;M[0].set(n.x,n.y,n.z),M[1].set(-n.x,n.y,n.z),M[2].set(-n.x,-n.y,n.z),M[3].set(-n.x,-n.y,-n.z),M[4].set(n.x,-n.y,-n.z),M[5].set(n.x,n.y,-n.z),M[6].set(-n.x,n.y,-n.z),M[7].set(n.x,-n.y,n.z);const o=M[0];e.vmult(o,o),t.vadd(o,o),s.copy(o),i.copy(o);for(let n=1;n<8;n++){const o=M[n];e.vmult(o,o),t.vadd(o,o);const r=o.x,a=o.y,l=o.z;r>s.x&&(s.x=r),a>s.y&&(s.y=a),l>s.z&&(s.z=l),r<i.x&&(i.x=r),a<i.y&&(i.y=a),l<i.z&&(i.z=l)}}}const C=new r,M=[new r,new r,new r,new r,new r,new r,new r,new r],F=1,q=2,N=4,R=0,P=1,T=2;class I extends v{constructor(t){void 0===t&&(t={}),super(),this.id=I.idCounter++,this.index=-1,this.world=null,this.vlambda=new r,this.collisionFilterGroup="number"==typeof t.collisionFilterGroup?t.collisionFilterGroup:1,this.collisionFilterMask="number"==typeof t.collisionFilterMask?t.collisionFilterMask:-1,this.collisionResponse="boolean"!=typeof t.collisionResponse||t.collisionResponse,this.position=new r,this.previousPosition=new r,this.interpolatedPosition=new r,this.initPosition=new r,t.position&&(this.position.copy(t.position),this.previousPosition.copy(t.position),this.interpolatedPosition.copy(t.position),this.initPosition.copy(t.position)),this.velocity=new r,t.velocity&&this.velocity.copy(t.velocity),this.initVelocity=new r,this.force=new r;const e="number"==typeof t.mass?t.mass:0;this.mass=e,this.invMass=e>0?1/e:0,this.material=t.material||null,this.linearDamping="number"==typeof t.linearDamping?t.linearDamping:.01,this.type=e<=0?I.STATIC:I.DYNAMIC,typeof t.type==typeof I.STATIC&&(this.type=t.type),this.allowSleep=void 0===t.allowSleep||t.allowSleep,this.sleepState=I.AWAKE,this.sleepSpeedLimit=void 0!==t.sleepSpeedLimit?t.sleepSpeedLimit:.1,this.sleepTimeLimit=void 0!==t.sleepTimeLimit?t.sleepTimeLimit:1,this.timeLastSleepy=0,this.wakeUpAfterNarrowphase=!1,this.torque=new r,this.quaternion=new y,this.initQuaternion=new y,this.previousQuaternion=new y,this.interpolatedQuaternion=new y,t.quaternion&&(this.quaternion.copy(t.quaternion),this.initQuaternion.copy(t.quaternion),this.previousQuaternion.copy(t.quaternion),this.interpolatedQuaternion.copy(t.quaternion)),this.angularVelocity=new r,t.angularVelocity&&this.angularVelocity.copy(t.angularVelocity),this.initAngularVelocity=new r,this.shapes=[],this.shapeOffsets=[],this.shapeOrientations=[],this.inertia=new r,this.invInertia=new r,this.invInertiaWorld=new n,this.invMassSolve=0,this.invInertiaSolve=new r,this.invInertiaWorldSolve=new n,this.fixedRotation=void 0!==t.fixedRotation&&t.fixedRotation,this.angularDamping=void 0!==t.angularDamping?t.angularDamping:.01,this.linearFactor=new r(1,1,1),t.linearFactor&&this.linearFactor.copy(t.linearFactor),this.angularFactor=new r(1,1,1),t.angularFactor&&this.angularFactor.copy(t.angularFactor),this.aabb=new c,this.aabbNeedsUpdate=!0,this.boundingRadius=0,this.wlambda=new r,this.isTrigger=Boolean(t.isTrigger),t.shape&&this.addShape(t.shape),this.updateMassProperties()}wakeUp(){const t=this.sleepState;this.sleepState=I.AWAKE,this.wakeUpAfterNarrowphase=!1,t===I.SLEEPING&&this.dispatchEvent(I.wakeupEvent)}sleep(){this.sleepState=I.SLEEPING,this.velocity.set(0,0,0),this.angularVelocity.set(0,0,0),this.wakeUpAfterNarrowphase=!1}sleepTick(t){if(this.allowSleep){const e=this.sleepState,i=this.velocity.lengthSquared()+this.angularVelocity.lengthSquared(),s=this.sleepSpeedLimit**2;e===I.AWAKE&&i<s?(this.sleepState=I.SLEEPY,this.timeLastSleepy=t,this.dispatchEvent(I.sleepyEvent)):e===I.SLEEPY&&i>s?this.wakeUp():e===I.SLEEPY&&t-this.timeLastSleepy>this.sleepTimeLimit&&(this.sleep(),this.dispatchEvent(I.sleepEvent))}}updateSolveMassProperties(){this.sleepState===I.SLEEPING||this.type===I.KINEMATIC?(this.invMassSolve=0,this.invInertiaSolve.setZero(),this.invInertiaWorldSolve.setZero()):(this.invMassSolve=this.invMass,this.invInertiaSolve.copy(this.invInertia),this.invInertiaWorldSolve.copy(this.invInertiaWorld))}pointToLocalFrame(t,e){return void 0===e&&(e=new r),t.vsub(this.position,e),this.quaternion.conjugate().vmult(e,e),e}vectorToLocalFrame(t,e){return void 0===e&&(e=new r),this.quaternion.conjugate().vmult(t,e),e}pointToWorldFrame(t,e){return void 0===e&&(e=new r),this.quaternion.vmult(t,e),e.vadd(this.position,e),e}vectorToWorldFrame(t,e){return void 0===e&&(e=new r),this.quaternion.vmult(t,e),e}addShape(t,e,i){const s=new r,n=new y;return e&&s.copy(e),i&&n.copy(i),this.shapes.push(t),this.shapeOffsets.push(s),this.shapeOrientations.push(n),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,t.body=this,this}removeShape(t){const e=this.shapes.indexOf(t);return-1===e||(this.shapes.splice(e,1),this.shapeOffsets.splice(e,1),this.shapeOrientations.splice(e,1),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,t.body=null),this}updateBoundingRadius(){const t=this.shapes,e=this.shapeOffsets,i=t.length;let s=0;for(let n=0;n!==i;n++){const i=t[n];i.updateBoundingSphereRadius();const o=e[n].length(),r=i.boundingSphereRadius;o+r>s&&(s=o+r)}this.boundingRadius=s}updateAABB(){const t=this.shapes,e=this.shapeOffsets,i=this.shapeOrientations,s=t.length,n=j,o=L,r=this.quaternion,a=this.aabb,l=O;for(let h=0;h!==s;h++){const s=t[h];r.vmult(e[h],n),n.vadd(this.position,n),r.mult(i[h],o),s.calculateWorldAABB(n,o,l.lowerBound,l.upperBound),0===h?a.copy(l):a.extend(l)}this.aabbNeedsUpdate=!1}updateInertiaWorld(t){const e=this.invInertia;if(e.x!==e.y||e.y!==e.z||t){const t=W,i=k;t.setRotationFromQuaternion(this.quaternion),t.transpose(i),t.scale(e,t),t.mmult(i,this.invInertiaWorld)}else;}applyForce(t,e){if(void 0===e&&(e=new r),this.type!==I.DYNAMIC)return;this.sleepState===I.SLEEPING&&this.wakeUp();const i=V;e.cross(t,i),this.force.vadd(t,this.force),this.torque.vadd(i,this.torque)}applyLocalForce(t,e){if(void 0===e&&(e=new r),this.type!==I.DYNAMIC)return;const i=H,s=D;this.vectorToWorldFrame(t,i),this.vectorToWorldFrame(e,s),this.applyForce(i,s)}applyTorque(t){this.type===I.DYNAMIC&&(this.sleepState===I.SLEEPING&&this.wakeUp(),this.torque.vadd(t,this.torque))}applyImpulse(t,e){if(void 0===e&&(e=new r),this.type!==I.DYNAMIC)return;this.sleepState===I.SLEEPING&&this.wakeUp();const i=e,s=G;s.copy(t),s.scale(this.invMass,s),this.velocity.vadd(s,this.velocity);const n=U;i.cross(t,n),this.invInertiaWorld.vmult(n,n),this.angularVelocity.vadd(n,this.angularVelocity)}applyLocalImpulse(t,e){if(void 0===e&&(e=new r),this.type!==I.DYNAMIC)return;const i=_,s=Y;this.vectorToWorldFrame(t,i),this.vectorToWorldFrame(e,s),this.applyImpulse(i,s)}updateMassProperties(){const t=X;this.invMass=this.mass>0?1/this.mass:0;const e=this.inertia,i=this.fixedRotation;this.updateAABB(),t.set((this.aabb.upperBound.x-this.aabb.lowerBound.x)/2,(this.aabb.upperBound.y-this.aabb.lowerBound.y)/2,(this.aabb.upperBound.z-this.aabb.lowerBound.z)/2),A.calculateInertia(t,this.mass,e),this.invInertia.set(e.x>0&&!i?1/e.x:0,e.y>0&&!i?1/e.y:0,e.z>0&&!i?1/e.z:0),this.updateInertiaWorld(!0)}getVelocityAtWorldPoint(t,e){const i=new r;return t.vsub(this.position,i),this.angularVelocity.cross(i,e),this.velocity.vadd(e,e),e}integrate(t,e,i){if(this.previousPosition.copy(this.position),this.previousQuaternion.copy(this.quaternion),this.type!==I.DYNAMIC&&this.type!==I.KINEMATIC||this.sleepState===I.SLEEPING)return;const s=this.velocity,n=this.angularVelocity,o=this.position,r=this.force,a=this.torque,l=this.quaternion,h=this.invMass,c=this.invInertiaWorld,u=this.linearFactor,d=h*t;s.x+=r.x*d*u.x,s.y+=r.y*d*u.y,s.z+=r.z*d*u.z;const p=c.elements,v=this.angularFactor,y=a.x*v.x,w=a.y*v.y,m=a.z*v.z;n.x+=t*(p[0]*y+p[1]*w+p[2]*m),n.y+=t*(p[3]*y+p[4]*w+p[5]*m),n.z+=t*(p[6]*y+p[7]*w+p[8]*m),o.x+=s.x*t,o.y+=s.y*t,o.z+=s.z*t,l.integrate(this.angularVelocity,t,this.angularFactor,l),e&&(i?l.normalizeFast():l.normalize()),this.aabbNeedsUpdate=!0,this.updateInertiaWorld()}}I.idCounter=0,I.COLLIDE_EVENT_NAME="collide",I.DYNAMIC=F,I.STATIC=q,I.KINEMATIC=N,I.AWAKE=R,I.SLEEPY=P,I.SLEEPING=T,I.wakeupEvent={type:"wakeup"},I.sleepyEvent={type:"sleepy"},I.sleepEvent={type:"sleep"};const j=new r,L=new y,O=new c,W=new n,k=new n,V=(new n,new r),H=new r,D=new r,G=new r,U=new r,_=new r,Y=new r,X=new r;class K{constructor(){this.world=null,this.useBoundingBoxes=!1,this.dirty=!0}collisionPairs(t,e,i){throw new Error("collisionPairs not implemented for this BroadPhase class!")}needBroadphaseCollision(t,e){return 0!=(t.collisionFilterGroup&e.collisionFilterMask)&&0!=(e.collisionFilterGroup&t.collisionFilterMask)&&(0==(t.type&I.STATIC)&&t.sleepState!==I.SLEEPING||0==(e.type&I.STATIC)&&e.sleepState!==I.SLEEPING)}intersectionTest(t,e,i,s){this.useBoundingBoxes?this.doBoundingBoxBroadphase(t,e,i,s):this.doBoundingSphereBroadphase(t,e,i,s)}doBoundingSphereBroadphase(t,e,i,s){const n=Z;e.position.vsub(t.position,n);const o=(t.boundingRadius+e.boundingRadius)**2;n.lengthSquared()<o&&(i.push(t),s.push(e))}doBoundingBoxBroadphase(t,e,i,s){t.aabbNeedsUpdate&&t.updateAABB(),e.aabbNeedsUpdate&&e.updateAABB(),t.aabb.overlaps(e.aabb)&&(i.push(t),s.push(e))}makePairsUnique(t,e){const i=$,s=Q,n=J,o=t.length;for(let i=0;i!==o;i++)s[i]=t[i],n[i]=e[i];t.length=0,e.length=0;for(let t=0;t!==o;t++){const e=s[t].id,o=n[t].id,r=e<o?`${e},${o}`:`${o},${e}`;i[r]=t,i.keys.push(r)}for(let o=0;o!==i.keys.length;o++){const o=i.keys.pop(),r=i[o];t.push(s[r]),e.push(n[r]),delete i[o]}}setWorld(t){}static boundingSphereCheck(t,e){const i=new r;t.position.vsub(e.position,i);const s=t.shapes[0],n=e.shapes[0];return Math.pow(s.boundingSphereRadius+n.boundingSphereRadius,2)>i.lengthSquared()}aabbQuery(t,e,i){return[]}}const Z=new r;new r,new y,new r;const $={keys:[]},Q=[],J=[];new r;new r;new r;class tt extends K{constructor(){super()}collisionPairs(t,e,i){const s=t.bodies,n=s.length;let o,r;for(let t=0;t!==n;t++)for(let n=0;n!==t;n++)o=s[t],r=s[n],this.needBroadphaseCollision(o,r)&&this.intersectionTest(o,r,e,i)}aabbQuery(t,e,i){void 0===i&&(i=[]);for(let s=0;s<t.bodies.length;s++){const n=t.bodies[s];n.aabbNeedsUpdate&&n.updateAABB(),n.aabb.overlaps(e)&&i.push(n)}return i}}class et{constructor(){this.rayFromWorld=new r,this.rayToWorld=new r,this.hitNormalWorld=new r,this.hitPointWorld=new r,this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this.shouldStop=!1}reset(){this.rayFromWorld.setZero(),this.rayToWorld.setZero(),this.hitNormalWorld.setZero(),this.hitPointWorld.setZero(),this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this.shouldStop=!1}abort(){this.shouldStop=!0}set(t,e,i,s,n,o,r){this.rayFromWorld.copy(t),this.rayToWorld.copy(e),this.hitNormalWorld.copy(i),this.hitPointWorld.copy(s),this.shape=n,this.body=o,this.distance=r}}let it,st,nt,ot,rt,at,lt;const ht=1,ct=2,ut=4;it=f.types.SPHERE,st=f.types.PLANE,nt=f.types.BOX,ot=f.types.CYLINDER,rt=f.types.CONVEXPOLYHEDRON,at=f.types.HEIGHTFIELD,lt=f.types.TRIMESH;class dt{get[it](){return this._intersectSphere}get[st](){return this._intersectPlane}get[nt](){return this._intersectBox}get[ot](){return this._intersectConvex}get[rt](){return this._intersectConvex}get[at](){return this._intersectHeightfield}get[lt](){return this._intersectTrimesh}constructor(t,e){void 0===t&&(t=new r),void 0===e&&(e=new r),this.from=t.clone(),this.to=e.clone(),this.direction=new r,this.precision=1e-4,this.checkCollisionResponse=!0,this.skipBackfaces=!1,this.collisionFilterMask=-1,this.collisionFilterGroup=-1,this.mode=dt.ANY,this.result=new et,this.hasHit=!1,this.callback=t=>{}}intersectWorld(t,e){return this.mode=e.mode||dt.ANY,this.result=e.result||new et,this.skipBackfaces=!!e.skipBackfaces,this.collisionFilterMask=void 0!==e.collisionFilterMask?e.collisionFilterMask:-1,this.collisionFilterGroup=void 0!==e.collisionFilterGroup?e.collisionFilterGroup:-1,this.checkCollisionResponse=void 0===e.checkCollisionResponse||e.checkCollisionResponse,e.from&&this.from.copy(e.from),e.to&&this.to.copy(e.to),this.callback=e.callback||(()=>{}),this.hasHit=!1,this.result.reset(),this.updateDirection(),this.getAABB(pt),vt.length=0,t.broadphase.aabbQuery(t,pt,vt),this.intersectBodies(vt),this.hasHit}intersectBody(t,e){e&&(this.result=e,this.updateDirection());const i=this.checkCollisionResponse;if(i&&!t.collisionResponse)return;if(0==(this.collisionFilterGroup&t.collisionFilterMask)||0==(t.collisionFilterGroup&this.collisionFilterMask))return;const s=mt,n=ft;for(let e=0,o=t.shapes.length;e<o;e++){const o=t.shapes[e];if((!i||o.collisionResponse)&&(t.quaternion.mult(t.shapeOrientations[e],n),t.quaternion.vmult(t.shapeOffsets[e],s),s.vadd(t.position,s),this.intersectShape(o,n,s,t),this.result.shouldStop))break}}intersectBodies(t,e){e&&(this.result=e,this.updateDirection());for(let e=0,i=t.length;!this.result.shouldStop&&e<i;e++)this.intersectBody(t[e])}updateDirection(){this.to.vsub(this.from,this.direction),this.direction.normalize()}intersectShape(t,e,i,s){const n=function(t,e,i){i.vsub(t,Wt);const s=Wt.dot(e);e.scale(s,kt),kt.vadd(t,kt);const n=i.distanceTo(kt);return n}(this.from,this.direction,i);if(n>t.boundingSphereRadius)return;const o=this[t.type];o&&o.call(this,t,e,i,s,t)}_intersectBox(t,e,i,s,n){return this._intersectConvex(t.convexPolyhedronRepresentation,e,i,s,n)}_intersectPlane(t,e,i,s,n){const o=this.from,a=this.to,l=this.direction,h=new r(0,0,1);e.vmult(h,h);const c=new r;o.vsub(i,c);const u=c.dot(h);a.vsub(i,c);if(u*c.dot(h)>0)return;if(o.distanceTo(a)<u)return;const d=h.dot(l);if(Math.abs(d)<this.precision)return;const p=new r,v=new r,y=new r;o.vsub(i,p);const w=-h.dot(p)/d;l.scale(w,v),o.vadd(v,y),this.reportIntersection(h,y,n,s,-1)}getAABB(t){const{lowerBound:e,upperBound:i}=t,s=this.to,n=this.from;e.x=Math.min(s.x,n.x),e.y=Math.min(s.y,n.y),e.z=Math.min(s.z,n.z),i.x=Math.max(s.x,n.x),i.y=Math.max(s.y,n.y),i.z=Math.max(s.z,n.z)}_intersectHeightfield(t,e,i,s,n){t.data,t.elementSize;const o=Bt;o.from.copy(this.from),o.to.copy(this.to),g.pointToLocalFrame(i,e,o.from,o.from),g.pointToLocalFrame(i,e,o.to,o.to),o.updateDirection();const r=At;let a,l,h,u;a=l=0,h=u=t.data.length-1;const d=new c;o.getAABB(d),t.getIndexOfPosition(d.lowerBound.x,d.lowerBound.y,r,!0),a=Math.max(a,r[0]),l=Math.max(l,r[1]),t.getIndexOfPosition(d.upperBound.x,d.upperBound.y,r,!0),h=Math.min(h,r[0]+1),u=Math.min(u,r[1]+1);for(let r=a;r<h;r++)for(let a=l;a<u;a++){if(this.result.shouldStop)return;if(t.getAabbAtIndex(r,a,d),d.overlapsRay(o)){if(t.getConvexTrianglePillar(r,a,!1),g.pointToWorldFrame(i,e,t.pillarOffset,St),this._intersectConvex(t.pillarConvex,e,St,s,n,zt),this.result.shouldStop)return;t.getConvexTrianglePillar(r,a,!0),g.pointToWorldFrame(i,e,t.pillarOffset,St),this._intersectConvex(t.pillarConvex,e,St,s,n,zt)}}}_intersectSphere(t,e,i,s,n){const o=this.from,r=this.to,a=t.radius,l=(r.x-o.x)**2+(r.y-o.y)**2+(r.z-o.z)**2,h=2*((r.x-o.x)*(o.x-i.x)+(r.y-o.y)*(o.y-i.y)+(r.z-o.z)*(o.z-i.z)),c=h**2-4*l*((o.x-i.x)**2+(o.y-i.y)**2+(o.z-i.z)**2-a**2),u=Ct,d=Mt;if(!(c<0))if(0===c)o.lerp(r,c,u),u.vsub(i,d),d.normalize(),this.reportIntersection(d,u,n,s,-1);else{const t=(-h-Math.sqrt(c))/(2*l),e=(-h+Math.sqrt(c))/(2*l);if(t>=0&&t<=1&&(o.lerp(r,t,u),u.vsub(i,d),d.normalize(),this.reportIntersection(d,u,n,s,-1)),this.result.shouldStop)return;e>=0&&e<=1&&(o.lerp(r,e,u),u.vsub(i,d),d.normalize(),this.reportIntersection(d,u,n,s,-1))}}_intersectConvex(t,e,i,s,n,o){const r=Ft,a=qt,l=o&&o.faceList||null,h=t.faces,c=t.vertices,u=t.faceNormals,d=this.direction,p=this.from,v=this.to,y=p.distanceTo(v),w=l?l.length:h.length,m=this.result;for(let t=0;!m.shouldStop&&t<w;t++){const o=l?l[t]:t,v=h[o],w=u[o],f=e,g=i;a.copy(c[v[0]]),f.vmult(a,a),a.vadd(g,a),a.vsub(p,a),f.vmult(w,r);const x=d.dot(r);if(Math.abs(x)<this.precision)continue;const b=r.dot(a)/x;if(!(b<0)){d.scale(b,gt),gt.vadd(p,gt),xt.copy(c[v[0]]),f.vmult(xt,xt),g.vadd(xt,xt);for(let t=1;!m.shouldStop&&t<v.length-1;t++){bt.copy(c[v[t]]),Et.copy(c[v[t+1]]),f.vmult(bt,bt),f.vmult(Et,Et),g.vadd(bt,bt),g.vadd(Et,Et);const e=gt.distanceTo(p);!dt.pointInTriangle(gt,xt,bt,Et)&&!dt.pointInTriangle(gt,bt,xt,Et)||e>y||this.reportIntersection(r,gt,n,s,o)}}}}_intersectTrimesh(t,e,i,s,n,o){const r=Nt,a=Lt,l=Ot,h=qt,c=Rt,u=Pt,d=Tt,p=jt,v=It,y=t.indices;t.vertices;const w=this.from,m=this.to,f=this.direction;l.position.copy(i),l.quaternion.copy(e),g.vectorToLocalFrame(i,e,f,c),g.pointToLocalFrame(i,e,w,u),g.pointToLocalFrame(i,e,m,d),d.x*=t.scale.x,d.y*=t.scale.y,d.z*=t.scale.z,u.x*=t.scale.x,u.y*=t.scale.y,u.z*=t.scale.z,d.vsub(u,c),c.normalize();const x=u.distanceSquared(d);t.tree.rayQuery(this,l,a);for(let o=0,l=a.length;!this.result.shouldStop&&o!==l;o++){const l=a[o];t.getNormal(l,r),t.getVertex(y[3*l],xt),xt.vsub(u,h);const d=c.dot(r),w=r.dot(h)/d;if(w<0)continue;c.scale(w,gt),gt.vadd(u,gt),t.getVertex(y[3*l+1],bt),t.getVertex(y[3*l+2],Et);const m=gt.distanceSquared(u);!dt.pointInTriangle(gt,bt,xt,Et)&&!dt.pointInTriangle(gt,xt,bt,Et)||m>x||(g.vectorToWorldFrame(e,r,v),g.pointToWorldFrame(i,e,gt,p),this.reportIntersection(v,p,n,s,l))}a.length=0}reportIntersection(t,e,i,s,n){const o=this.from,r=this.to,a=o.distanceTo(e),l=this.result;if(!(this.skipBackfaces&&t.dot(this.direction)>0))switch(l.hitFaceIndex=void 0!==n?n:-1,this.mode){case dt.ALL:this.hasHit=!0,l.set(o,r,t,e,i,s,a),l.hasHit=!0,this.callback(l);break;case dt.CLOSEST:(a<l.distance||!l.hasHit)&&(this.hasHit=!0,l.hasHit=!0,l.set(o,r,t,e,i,s,a));break;case dt.ANY:this.hasHit=!0,l.hasHit=!0,l.set(o,r,t,e,i,s,a),l.shouldStop=!0}}static pointInTriangle(t,e,i,s){s.vsub(e,Wt),i.vsub(e,yt),t.vsub(e,wt);const n=Wt.dot(Wt),o=Wt.dot(yt),r=Wt.dot(wt),a=yt.dot(yt),l=yt.dot(wt);let h,c;return(h=a*r-o*l)>=0&&(c=n*l-o*r)>=0&&h+c<n*a-o*o}}dt.CLOSEST=ht,dt.ANY=ct,dt.ALL=ut;const pt=new c,vt=[],yt=new r,wt=new r,mt=new r,ft=new y,gt=new r,xt=new r,bt=new r,Et=new r;new r,new et;const zt={faceList:[0]},St=new r,Bt=new dt,At=[],Ct=new r,Mt=new r,Ft=new r,qt=(new r,new r,new r),Nt=new r,Rt=new r,Pt=new r,Tt=new r,It=new r,jt=new r;new c;const Lt=[],Ot=new g,Wt=new r,kt=new r;class Vt{static defaults(t,e){void 0===t&&(t={});for(let i in e)i in t||(t[i]=e[i]);return t}}class Ht{constructor(t,e,i){void 0===i&&(i={}),i=Vt.defaults(i,{collideConnected:!0,wakeUpBodies:!0}),this.equations=[],this.bodyA=t,this.bodyB=e,this.id=Ht.idCounter++,this.collideConnected=i.collideConnected,i.wakeUpBodies&&(t&&t.wakeUp(),e&&e.wakeUp())}update(){throw new Error("method update() not implmemented in this Constraint subclass!")}enable(){const t=this.equations;for(let e=0;e<t.length;e++)t[e].enabled=!0}disable(){const t=this.equations;for(let e=0;e<t.length;e++)t[e].enabled=!1}}Ht.idCounter=0;class Dt{constructor(){this.spatial=new r,this.rotational=new r}multiplyElement(t){return t.spatial.dot(this.spatial)+t.rotational.dot(this.rotational)}multiplyVectors(t,e){return t.dot(this.spatial)+e.dot(this.rotational)}}class Gt{constructor(t,e,i,s){void 0===i&&(i=-1e6),void 0===s&&(s=1e6),this.id=Gt.idCounter++,this.minForce=i,this.maxForce=s,this.bi=t,this.bj=e,this.a=0,this.b=0,this.eps=0,this.jacobianElementA=new Dt,this.jacobianElementB=new Dt,this.enabled=!0,this.multiplier=0,this.setSpookParams(1e7,4,1/60)}setSpookParams(t,e,i){const s=e,n=t,o=i;this.a=4/(o*(1+4*s)),this.b=4*s/(1+4*s),this.eps=4/(o*o*n*(1+4*s))}computeB(t,e,i){const s=this.computeGW();return-this.computeGq()*t-s*e-this.computeGiMf()*i}computeGq(){const t=this.jacobianElementA,e=this.jacobianElementB,i=this.bi,s=this.bj,n=i.position,o=s.position;return t.spatial.dot(n)+e.spatial.dot(o)}computeGW(){const t=this.jacobianElementA,e=this.jacobianElementB,i=this.bi,s=this.bj,n=i.velocity,o=s.velocity,r=i.angularVelocity,a=s.angularVelocity;return t.multiplyVectors(n,r)+e.multiplyVectors(o,a)}computeGWlambda(){const t=this.jacobianElementA,e=this.jacobianElementB,i=this.bi,s=this.bj,n=i.vlambda,o=s.vlambda,r=i.wlambda,a=s.wlambda;return t.multiplyVectors(n,r)+e.multiplyVectors(o,a)}computeGiMf(){const t=this.jacobianElementA,e=this.jacobianElementB,i=this.bi,s=this.bj,n=i.force,o=i.torque,r=s.force,a=s.torque,l=i.invMassSolve,h=s.invMassSolve;return n.scale(l,Ut),r.scale(h,_t),i.invInertiaWorldSolve.vmult(o,Yt),s.invInertiaWorldSolve.vmult(a,Xt),t.multiplyVectors(Ut,Yt)+e.multiplyVectors(_t,Xt)}computeGiMGt(){const t=this.jacobianElementA,e=this.jacobianElementB,i=this.bi,s=this.bj,n=i.invMassSolve,o=s.invMassSolve,r=i.invInertiaWorldSolve,a=s.invInertiaWorldSolve;let l=n+o;return r.vmult(t.rotational,Kt),l+=Kt.dot(t.rotational),a.vmult(e.rotational,Kt),l+=Kt.dot(e.rotational),l}addToWlambda(t){const e=this.jacobianElementA,i=this.jacobianElementB,s=this.bi,n=this.bj,o=Zt;s.vlambda.addScaledVector(s.invMassSolve*t,e.spatial,s.vlambda),n.vlambda.addScaledVector(n.invMassSolve*t,i.spatial,n.vlambda),s.invInertiaWorldSolve.vmult(e.rotational,o),s.wlambda.addScaledVector(t,o,s.wlambda),n.invInertiaWorldSolve.vmult(i.rotational,o),n.wlambda.addScaledVector(t,o,n.wlambda)}computeC(){return this.computeGiMGt()+this.eps}}Gt.idCounter=0;const Ut=new r,_t=new r,Yt=new r,Xt=new r,Kt=new r,Zt=new r;class $t extends Gt{constructor(t,e,i){void 0===i&&(i=1e6),super(t,e,0,i),this.restitution=0,this.ri=new r,this.rj=new r,this.ni=new r}computeB(t){const e=this.a,i=this.b,s=this.bi,n=this.bj,o=this.ri,r=this.rj,a=Qt,l=Jt,h=s.velocity,c=s.angularVelocity;s.force,s.torque;const u=n.velocity,d=n.angularVelocity;n.force,n.torque;const p=te,v=this.jacobianElementA,y=this.jacobianElementB,w=this.ni;o.cross(w,a),r.cross(w,l),w.negate(v.spatial),a.negate(v.rotational),y.spatial.copy(w),y.rotational.copy(l),p.copy(n.position),p.vadd(r,p),p.vsub(s.position,p),p.vsub(o,p);const m=w.dot(p),f=this.restitution+1;return-m*e-(f*u.dot(w)-f*h.dot(w)+d.dot(l)-c.dot(a))*i-t*this.computeGiMf()}getImpactVelocityAlongNormal(){const t=ee,e=ie,i=se,s=ne,n=oe;return this.bi.position.vadd(this.ri,i),this.bj.position.vadd(this.rj,s),this.bi.getVelocityAtWorldPoint(i,t),this.bj.getVelocityAtWorldPoint(s,e),t.vsub(e,n),this.ni.dot(n)}}const Qt=new r,Jt=new r,te=new r,ee=new r,ie=new r,se=new r,ne=new r,oe=new r;new r,new r;new r,new r;new r,new r;new r,new r;new r,new r;class re extends Gt{constructor(t,e,i){super(t,e,-i,i),this.ri=new r,this.rj=new r,this.t=new r}computeB(t){this.a;const e=this.b;this.bi,this.bj;const i=this.ri,s=this.rj,n=ae,o=le,r=this.t;i.cross(r,n),s.cross(r,o);const a=this.jacobianElementA,l=this.jacobianElementB;r.negate(a.spatial),n.negate(a.rotational),l.spatial.copy(r),l.rotational.copy(o);return-this.computeGW()*e-t*this.computeGiMf()}}const ae=new r,le=new r;class he{constructor(t,e,i){i=Vt.defaults(i,{friction:.3,restitution:.3,contactEquationStiffness:1e7,contactEquationRelaxation:3,frictionEquationStiffness:1e7,frictionEquationRelaxation:3}),this.id=he.idCounter++,this.materials=[t,e],this.friction=i.friction,this.restitution=i.restitution,this.contactEquationStiffness=i.contactEquationStiffness,this.contactEquationRelaxation=i.contactEquationRelaxation,this.frictionEquationStiffness=i.frictionEquationStiffness,this.frictionEquationRelaxation=i.frictionEquationRelaxation}}he.idCounter=0;class ce{constructor(t){void 0===t&&(t={});let e="";"string"==typeof t&&(e=t,t={}),this.name=e,this.id=ce.idCounter++,this.friction=void 0!==t.friction?t.friction:-1,this.restitution=void 0!==t.restitution?t.restitution:-1}}ce.idCounter=0;new r,new r,new r,new r,new r,new r,new r,new r,new r,new r,new r;new r,new r;new r,new r,new r;new r,new r,new r;new dt,new r;new r,new r,new r(1,0,0),new r(0,1,0),new r(0,0,1),new r,new r,new r,new r;new r,new r,new r,new r;new r,new r,new r;class ue extends f{constructor(t){if(super({type:f.types.SPHERE}),this.radius=void 0!==t?t:1,this.radius<0)throw new Error("The sphere radius cannot be negative.");this.updateBoundingSphereRadius()}calculateLocalInertia(t,e){void 0===e&&(e=new r);const i=2*t*this.radius*this.radius/5;return e.x=i,e.y=i,e.z=i,e}volume(){return 4*Math.PI*Math.pow(this.radius,3)/3}updateBoundingSphereRadius(){this.boundingSphereRadius=this.radius}calculateWorldAABB(t,e,i,s){const n=this.radius,o=["x","y","z"];for(let e=0;e<o.length;e++){const r=o[e];i[r]=t[r]-n,s[r]=t[r]+n}}}new r,new r;new r,new r,new r,new r,new r,new r,new r;const de=new r;new r,new r,new r,new r,new r,new r,new r,new r,new r;new r,new c;new r,new c,new r,new r,new r,new r,new r,new r,new r,new c,new r,new g,new c;class pe{constructor(){this.equations=[]}solve(t,e){return 0}addEquation(t){!t.enabled||t.bi.isTrigger||t.bj.isTrigger||this.equations.push(t)}removeEquation(t){const e=this.equations,i=e.indexOf(t);-1!==i&&e.splice(i,1)}removeAllEquations(){this.equations.length=0}}class ve extends pe{constructor(){super(),this.iterations=10,this.tolerance=1e-7}solve(t,e){let i=0;const s=this.iterations,n=this.tolerance*this.tolerance,o=this.equations,r=o.length,a=e.bodies,l=a.length,h=t;let c,u,d,p,v,y;if(0!==r)for(let t=0;t!==l;t++)a[t].updateSolveMassProperties();const w=we,m=me,f=ye;w.length=r,m.length=r,f.length=r;for(let t=0;t!==r;t++){const e=o[t];f[t]=0,m[t]=e.computeB(h),w[t]=1/e.computeC()}if(0!==r){for(let t=0;t!==l;t++){const e=a[t],i=e.vlambda,s=e.wlambda;i.set(0,0,0),s.set(0,0,0)}for(i=0;i!==s;i++){p=0;for(let t=0;t!==r;t++){const e=o[t];c=m[t],u=w[t],y=f[t],v=e.computeGWlambda(),d=u*(c-v-e.eps*y),y+d<e.minForce?d=e.minForce-y:y+d>e.maxForce&&(d=e.maxForce-y),f[t]+=d,p+=d>0?d:-d,e.addToWlambda(d)}if(p*p<n)break}for(let t=0;t!==l;t++){const e=a[t],i=e.velocity,s=e.angularVelocity;e.vlambda.vmul(e.linearFactor,e.vlambda),i.vadd(e.vlambda,i),e.wlambda.vmul(e.angularFactor,e.wlambda),s.vadd(e.wlambda,s)}let t=o.length;const e=1/h;for(;t--;)o[t].multiplier=f[t]*e}return i}}const ye=[],we=[],me=[];I.STATIC;class fe{constructor(){this.objects=[],this.type=Object}release(){const t=arguments.length;for(let e=0;e!==t;e++)this.objects.push(e<0||arguments.length<=e?void 0:arguments[e]);return this}get(){return 0===this.objects.length?this.constructObject():this.objects.pop()}constructObject(){throw new Error("constructObject() not implemented in this Pool subclass yet!")}resize(t){const e=this.objects;for(;e.length>t;)e.pop();for(;e.length<t;)e.push(this.constructObject());return this}}class ge extends fe{constructor(){super(...arguments),this.type=r}constructObject(){return new r}}const xe=f.types.SPHERE,be=f.types.SPHERE|f.types.PLANE,Ee=f.types.BOX|f.types.BOX,ze=f.types.SPHERE|f.types.BOX,Se=f.types.PLANE|f.types.BOX,Be=f.types.CONVEXPOLYHEDRON,Ae=f.types.SPHERE|f.types.CONVEXPOLYHEDRON,Ce=f.types.PLANE|f.types.CONVEXPOLYHEDRON,Me=f.types.BOX|f.types.CONVEXPOLYHEDRON,Fe=f.types.SPHERE|f.types.HEIGHTFIELD,qe=f.types.BOX|f.types.HEIGHTFIELD,Ne=f.types.CONVEXPOLYHEDRON|f.types.HEIGHTFIELD,Re=f.types.PARTICLE|f.types.SPHERE,Pe=f.types.PLANE|f.types.PARTICLE,Te=f.types.BOX|f.types.PARTICLE,Ie=f.types.PARTICLE|f.types.CONVEXPOLYHEDRON,je=f.types.CYLINDER,Le=f.types.SPHERE|f.types.CYLINDER,Oe=f.types.PLANE|f.types.CYLINDER,We=f.types.BOX|f.types.CYLINDER,ke=f.types.CONVEXPOLYHEDRON|f.types.CYLINDER,Ve=f.types.HEIGHTFIELD|f.types.CYLINDER,He=f.types.PARTICLE|f.types.CYLINDER,De=f.types.SPHERE|f.types.TRIMESH,Ge=f.types.PLANE|f.types.TRIMESH;class Ue{get[xe](){return this.sphereSphere}get[be](){return this.spherePlane}get[Ee](){return this.boxBox}get[ze](){return this.sphereBox}get[Se](){return this.planeBox}get[Be](){return this.convexConvex}get[Ae](){return this.sphereConvex}get[Ce](){return this.planeConvex}get[Me](){return this.boxConvex}get[Fe](){return this.sphereHeightfield}get[qe](){return this.boxHeightfield}get[Ne](){return this.convexHeightfield}get[Re](){return this.sphereParticle}get[Pe](){return this.planeParticle}get[Te](){return this.boxParticle}get[Ie](){return this.convexParticle}get[je](){return this.convexConvex}get[Le](){return this.sphereConvex}get[Oe](){return this.planeConvex}get[We](){return this.boxConvex}get[ke](){return this.convexConvex}get[Ve](){return this.heightfieldCylinder}get[He](){return this.particleCylinder}get[De](){return this.sphereTrimesh}get[Ge](){return this.planeTrimesh}constructor(t){this.contactPointPool=[],this.frictionEquationPool=[],this.result=[],this.frictionResult=[],this.v3pool=new ge,this.world=t,this.currentContactMaterial=t.defaultContactMaterial,this.enableFrictionReduction=!1}createContactEquation(t,e,i,s,n,o){let r;this.contactPointPool.length?(r=this.contactPointPool.pop(),r.bi=t,r.bj=e):r=new $t(t,e),r.enabled=t.collisionResponse&&e.collisionResponse&&i.collisionResponse&&s.collisionResponse;const a=this.currentContactMaterial;r.restitution=a.restitution,r.setSpookParams(a.contactEquationStiffness,a.contactEquationRelaxation,this.world.dt);const l=i.material||t.material,h=s.material||e.material;return l&&h&&l.restitution>=0&&h.restitution>=0&&(r.restitution=l.restitution*h.restitution),r.si=n||i,r.sj=o||s,r}createFrictionEquationsFromContact(t,e){const i=t.bi,s=t.bj,n=t.si,o=t.sj,r=this.world,a=this.currentContactMaterial;let l=a.friction;const h=n.material||i.material,c=o.material||s.material;if(h&&c&&h.friction>=0&&c.friction>=0&&(l=h.friction*c.friction),l>0){const n=l*(r.frictionGravity||r.gravity).length();let o=i.invMass+s.invMass;o>0&&(o=1/o);const h=this.frictionEquationPool,c=h.length?h.pop():new re(i,s,n*o),u=h.length?h.pop():new re(i,s,n*o);return c.bi=u.bi=i,c.bj=u.bj=s,c.minForce=u.minForce=-n*o,c.maxForce=u.maxForce=n*o,c.ri.copy(t.ri),c.rj.copy(t.rj),u.ri.copy(t.ri),u.rj.copy(t.rj),t.ni.tangents(c.t,u.t),c.setSpookParams(a.frictionEquationStiffness,a.frictionEquationRelaxation,r.dt),u.setSpookParams(a.frictionEquationStiffness,a.frictionEquationRelaxation,r.dt),c.enabled=u.enabled=t.enabled,e.push(c,u),!0}return!1}createFrictionFromAverage(t){let e=this.result[this.result.length-1];if(!this.createFrictionEquationsFromContact(e,this.frictionResult)||1===t)return;const i=this.frictionResult[this.frictionResult.length-2],s=this.frictionResult[this.frictionResult.length-1];_e.setZero(),Ye.setZero(),Xe.setZero();const n=e.bi;e.bj;for(let i=0;i!==t;i++)e=this.result[this.result.length-1-i],e.bi!==n?(_e.vadd(e.ni,_e),Ye.vadd(e.ri,Ye),Xe.vadd(e.rj,Xe)):(_e.vsub(e.ni,_e),Ye.vadd(e.rj,Ye),Xe.vadd(e.ri,Xe));const o=1/t;Ye.scale(o,i.ri),Xe.scale(o,i.rj),s.ri.copy(i.ri),s.rj.copy(i.rj),_e.normalize(),_e.tangents(i.t,s.t)}getContacts(t,e,i,s,n,o,r){this.contactPointPool=n,this.frictionEquationPool=r,this.result=s,this.frictionResult=o;const a=$e,l=Qe,h=Ke,c=Ze;for(let s=0,n=t.length;s!==n;s++){const n=t[s],o=e[s];let r=null;n.material&&o.material&&(r=i.getContactMaterial(n.material,o.material)||null);const u=n.type&I.KINEMATIC&&o.type&I.STATIC||n.type&I.STATIC&&o.type&I.KINEMATIC||n.type&I.KINEMATIC&&o.type&I.KINEMATIC;for(let t=0;t<n.shapes.length;t++){n.quaternion.mult(n.shapeOrientations[t],a),n.quaternion.vmult(n.shapeOffsets[t],h),h.vadd(n.position,h);const e=n.shapes[t];for(let t=0;t<o.shapes.length;t++){o.quaternion.mult(o.shapeOrientations[t],l),o.quaternion.vmult(o.shapeOffsets[t],c),c.vadd(o.position,c);const s=o.shapes[t];if(!(e.collisionFilterMask&s.collisionFilterGroup&&s.collisionFilterMask&e.collisionFilterGroup))continue;if(h.distanceTo(c)>e.boundingSphereRadius+s.boundingSphereRadius)continue;let d=null;e.material&&s.material&&(d=i.getContactMaterial(e.material,s.material)||null),this.currentContactMaterial=d||r||i.defaultContactMaterial;const p=this[e.type|s.type];if(p){let t=!1;t=e.type<s.type?p.call(this,e,s,h,c,a,l,n,o,e,s,u):p.call(this,s,e,c,h,l,a,o,n,e,s,u),t&&u&&(i.shapeOverlapKeeper.set(e.id,s.id),i.bodyOverlapKeeper.set(n.id,o.id))}}}}}sphereSphere(t,e,i,s,n,o,r,a,l,h,c){if(c)return i.distanceSquared(s)<(t.radius+e.radius)**2;const u=this.createContactEquation(r,a,t,e,l,h);s.vsub(i,u.ni),u.ni.normalize(),u.ri.copy(u.ni),u.rj.copy(u.ni),u.ri.scale(t.radius,u.ri),u.rj.scale(-e.radius,u.rj),u.ri.vadd(i,u.ri),u.ri.vsub(r.position,u.ri),u.rj.vadd(s,u.rj),u.rj.vsub(a.position,u.rj),this.result.push(u),this.createFrictionEquationsFromContact(u,this.frictionResult)}spherePlane(t,e,i,s,n,o,r,a,l,h,c){const u=this.createContactEquation(r,a,t,e,l,h);if(u.ni.set(0,0,1),o.vmult(u.ni,u.ni),u.ni.negate(u.ni),u.ni.normalize(),u.ni.scale(t.radius,u.ri),i.vsub(s,mi),u.ni.scale(u.ni.dot(mi),fi),mi.vsub(fi,u.rj),-mi.dot(u.ni)<=t.radius){if(c)return!0;const t=u.ri,e=u.rj;t.vadd(i,t),t.vsub(r.position,t),e.vadd(s,e),e.vsub(a.position,e),this.result.push(u),this.createFrictionEquationsFromContact(u,this.frictionResult)}}boxBox(t,e,i,s,n,o,r,a,l,h,c){return t.convexPolyhedronRepresentation.material=t.material,e.convexPolyhedronRepresentation.material=e.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,this.convexConvex(t.convexPolyhedronRepresentation,e.convexPolyhedronRepresentation,i,s,n,o,r,a,t,e,c)}sphereBox(t,e,i,s,n,o,r,a,l,h,c){const u=this.v3pool,d=Ci;i.vsub(s,zi),e.getSideNormals(d,o);const p=t.radius;let v=!1;const y=Fi,w=qi,m=Ni;let f=null,g=0,x=0,b=0,E=null;for(let t=0,e=d.length;t!==e&&!1===v;t++){const e=Si;e.copy(d[t]);const i=e.length();e.normalize();const s=zi.dot(e);if(s<i+p&&s>0){const n=Bi,o=Ai;n.copy(d[(t+1)%3]),o.copy(d[(t+2)%3]);const r=n.length(),a=o.length();n.normalize(),o.normalize();const l=zi.dot(n),h=zi.dot(o);if(l<r&&l>-r&&h<a&&h>-a){const t=Math.abs(s-i-p);if((null===E||t<E)&&(E=t,x=l,b=h,f=i,y.copy(e),w.copy(n),m.copy(o),g++,c))return!0}}}if(g){v=!0;const n=this.createContactEquation(r,a,t,e,l,h);y.scale(-p,n.ri),n.ni.copy(y),n.ni.negate(n.ni),y.scale(f,y),w.scale(x,w),y.vadd(w,y),m.scale(b,m),y.vadd(m,n.rj),n.ri.vadd(i,n.ri),n.ri.vsub(r.position,n.ri),n.rj.vadd(s,n.rj),n.rj.vsub(a.position,n.rj),this.result.push(n),this.createFrictionEquationsFromContact(n,this.frictionResult)}let z=u.get();const S=Mi;for(let n=0;2!==n&&!v;n++)for(let o=0;2!==o&&!v;o++)for(let u=0;2!==u&&!v;u++)if(z.set(0,0,0),n?z.vadd(d[0],z):z.vsub(d[0],z),o?z.vadd(d[1],z):z.vsub(d[1],z),u?z.vadd(d[2],z):z.vsub(d[2],z),s.vadd(z,S),S.vsub(i,S),S.lengthSquared()<p*p){if(c)return!0;v=!0;const n=this.createContactEquation(r,a,t,e,l,h);n.ri.copy(S),n.ri.normalize(),n.ni.copy(n.ri),n.ri.scale(p,n.ri),n.rj.copy(z),n.ri.vadd(i,n.ri),n.ri.vsub(r.position,n.ri),n.rj.vadd(s,n.rj),n.rj.vsub(a.position,n.rj),this.result.push(n),this.createFrictionEquationsFromContact(n,this.frictionResult)}u.release(z),z=null;const B=u.get(),A=u.get(),C=u.get(),M=u.get(),F=u.get(),q=d.length;for(let n=0;n!==q&&!v;n++)for(let o=0;o!==q&&!v;o++)if(n%3!=o%3){d[o].cross(d[n],B),B.normalize(),d[n].vadd(d[o],A),C.copy(i),C.vsub(A,C),C.vsub(s,C);const u=C.dot(B);B.scale(u,M);let y=0;for(;y===n%3||y===o%3;)y++;F.copy(i),F.vsub(M,F),F.vsub(A,F),F.vsub(s,F);const w=Math.abs(u),m=F.length();if(w<d[y].length()&&m<p){if(c)return!0;v=!0;const n=this.createContactEquation(r,a,t,e,l,h);A.vadd(M,n.rj),n.rj.copy(n.rj),F.negate(n.ni),n.ni.normalize(),n.ri.copy(n.rj),n.ri.vadd(s,n.ri),n.ri.vsub(i,n.ri),n.ri.normalize(),n.ri.scale(p,n.ri),n.ri.vadd(i,n.ri),n.ri.vsub(r.position,n.ri),n.rj.vadd(s,n.rj),n.rj.vsub(a.position,n.rj),this.result.push(n),this.createFrictionEquationsFromContact(n,this.frictionResult)}}u.release(B,A,C,M,F)}planeBox(t,e,i,s,n,o,r,a,l,h,c){return e.convexPolyhedronRepresentation.material=e.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,e.convexPolyhedronRepresentation.id=e.id,this.planeConvex(t,e.convexPolyhedronRepresentation,i,s,n,o,r,a,t,e,c)}convexConvex(t,e,i,s,n,o,r,a,l,h,c,u,d){const p=_i;if(!(i.distanceTo(s)>t.boundingSphereRadius+e.boundingSphereRadius)&&t.findSeparatingAxis(e,i,n,s,o,p,u,d)){const u=[],d=Yi;t.clipAgainstHull(i,n,e,s,o,p,-100,100,u);let v=0;for(let n=0;n!==u.length;n++){if(c)return!0;const o=this.createContactEquation(r,a,t,e,l,h),y=o.ri,w=o.rj;p.negate(o.ni),u[n].normal.negate(d),d.scale(u[n].depth,d),u[n].point.vadd(d,y),w.copy(u[n].point),y.vsub(i,y),w.vsub(s,w),y.vadd(i,y),y.vsub(r.position,y),w.vadd(s,w),w.vsub(a.position,w),this.result.push(o),v++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(o,this.frictionResult)}this.enableFrictionReduction&&v&&this.createFrictionFromAverage(v)}}sphereConvex(t,e,i,s,n,o,r,a,l,h,c){const u=this.v3pool;i.vsub(s,Ri);const d=e.faceNormals,p=e.faces,v=e.vertices,y=t.radius;let w=!1;for(let n=0;n!==v.length;n++){const u=v[n],d=ji;o.vmult(u,d),s.vadd(d,d);const p=Ii;if(d.vsub(i,p),p.lengthSquared()<y*y){if(c)return!0;w=!0;const n=this.createContactEquation(r,a,t,e,l,h);return n.ri.copy(p),n.ri.normalize(),n.ni.copy(n.ri),n.ri.scale(y,n.ri),d.vsub(s,n.rj),n.ri.vadd(i,n.ri),n.ri.vsub(r.position,n.ri),n.rj.vadd(s,n.rj),n.rj.vsub(a.position,n.rj),this.result.push(n),void this.createFrictionEquationsFromContact(n,this.frictionResult)}}for(let n=0,m=p.length;n!==m&&!1===w;n++){const m=d[n],f=p[n],g=Li;o.vmult(m,g);const x=Oi;o.vmult(v[f[0]],x),x.vadd(s,x);const b=Wi;g.scale(-y,b),i.vadd(b,b);const E=ki;b.vsub(x,E);const z=E.dot(g),S=Vi;if(i.vsub(x,S),z<0&&S.dot(g)>0){const n=[];for(let t=0,e=f.length;t!==e;t++){const e=u.get();o.vmult(v[f[t]],e),s.vadd(e,e),n.push(e)}if(Ei(n,g,i)){if(c)return!0;w=!0;const o=this.createContactEquation(r,a,t,e,l,h);g.scale(-y,o.ri),g.negate(o.ni);const d=u.get();g.scale(-z,d);const p=u.get();g.scale(-y,p),i.vsub(s,o.rj),o.rj.vadd(p,o.rj),o.rj.vadd(d,o.rj),o.rj.vadd(s,o.rj),o.rj.vsub(a.position,o.rj),o.ri.vadd(i,o.ri),o.ri.vsub(r.position,o.ri),u.release(d),u.release(p),this.result.push(o),this.createFrictionEquationsFromContact(o,this.frictionResult);for(let t=0,e=n.length;t!==e;t++)u.release(n[t]);return}for(let d=0;d!==f.length;d++){const p=u.get(),w=u.get();o.vmult(v[f[(d+1)%f.length]],p),o.vmult(v[f[(d+2)%f.length]],w),s.vadd(p,p),s.vadd(w,w);const m=Pi;w.vsub(p,m);const g=Ti;m.unit(g);const x=u.get(),b=u.get();i.vsub(p,b);const E=b.dot(g);g.scale(E,x),x.vadd(p,x);const z=u.get();if(x.vsub(i,z),E>0&&E*E<m.lengthSquared()&&z.lengthSquared()<y*y){if(c)return!0;const o=this.createContactEquation(r,a,t,e,l,h);x.vsub(s,o.rj),x.vsub(i,o.ni),o.ni.normalize(),o.ni.scale(y,o.ri),o.rj.vadd(s,o.rj),o.rj.vsub(a.position,o.rj),o.ri.vadd(i,o.ri),o.ri.vsub(r.position,o.ri),this.result.push(o),this.createFrictionEquationsFromContact(o,this.frictionResult);for(let t=0,e=n.length;t!==e;t++)u.release(n[t]);return u.release(p),u.release(w),u.release(x),u.release(z),void u.release(b)}u.release(p),u.release(w),u.release(x),u.release(z),u.release(b)}for(let t=0,e=n.length;t!==e;t++)u.release(n[t])}}}planeConvex(t,e,i,s,n,o,r,a,l,h,c){const u=Hi,d=Di;d.set(0,0,1),n.vmult(d,d);let p=0;const v=Gi;for(let n=0;n!==e.vertices.length;n++){u.copy(e.vertices[n]),o.vmult(u,u),s.vadd(u,u),u.vsub(i,v);if(d.dot(v)<=0){if(c)return!0;const n=this.createContactEquation(r,a,t,e,l,h),o=Ui;d.scale(d.dot(v),o),u.vsub(o,o),o.vsub(i,n.ri),n.ni.copy(d),u.vsub(s,n.rj),n.ri.vadd(i,n.ri),n.ri.vsub(r.position,n.ri),n.rj.vadd(s,n.rj),n.rj.vsub(a.position,n.rj),this.result.push(n),p++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(n,this.frictionResult)}}this.enableFrictionReduction&&p&&this.createFrictionFromAverage(p)}boxConvex(t,e,i,s,n,o,r,a,l,h,c){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexConvex(t.convexPolyhedronRepresentation,e,i,s,n,o,r,a,t,e,c)}sphereHeightfield(t,e,i,s,n,o,r,a,l,h,c){const u=e.data,d=t.radius,p=e.elementSize,v=as,y=rs;g.pointToLocalFrame(s,o,i,y);let w=Math.floor((y.x-d)/p)-1,m=Math.ceil((y.x+d)/p)+1,f=Math.floor((y.y-d)/p)-1,x=Math.ceil((y.y+d)/p)+1;if(m<0||x<0||w>u.length||f>u[0].length)return;w<0&&(w=0),m<0&&(m=0),f<0&&(f=0),x<0&&(x=0),w>=u.length&&(w=u.length-1),m>=u.length&&(m=u.length-1),x>=u[0].length&&(x=u[0].length-1),f>=u[0].length&&(f=u[0].length-1);const b=[];e.getRectMinMax(w,f,m,x,b);const E=b[0],z=b[1];if(y.z-d>z||y.z+d<E)return;const S=this.result;for(let l=w;l<m;l++)for(let h=f;h<x;h++){const u=S.length;let d=!1;if(e.getConvexTrianglePillar(l,h,!1),g.pointToWorldFrame(s,o,e.pillarOffset,v),i.distanceTo(v)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(d=this.sphereConvex(t,e.pillarConvex,i,v,n,o,r,a,t,e,c)),c&&d)return!0;if(e.getConvexTrianglePillar(l,h,!0),g.pointToWorldFrame(s,o,e.pillarOffset,v),i.distanceTo(v)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(d=this.sphereConvex(t,e.pillarConvex,i,v,n,o,r,a,t,e,c)),c&&d)return!0;if(S.length-u>2)return}}boxHeightfield(t,e,i,s,n,o,r,a,l,h,c){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexHeightfield(t.convexPolyhedronRepresentation,e,i,s,n,o,r,a,t,e,c)}convexHeightfield(t,e,i,s,n,o,r,a,l,h,c){const u=e.data,d=e.elementSize,p=t.boundingSphereRadius,v=ns,y=os,w=ss;g.pointToLocalFrame(s,o,i,w);let m=Math.floor((w.x-p)/d)-1,f=Math.ceil((w.x+p)/d)+1,x=Math.floor((w.y-p)/d)-1,b=Math.ceil((w.y+p)/d)+1;if(f<0||b<0||m>u.length||x>u[0].length)return;m<0&&(m=0),f<0&&(f=0),x<0&&(x=0),b<0&&(b=0),m>=u.length&&(m=u.length-1),f>=u.length&&(f=u.length-1),b>=u[0].length&&(b=u[0].length-1),x>=u[0].length&&(x=u[0].length-1);const E=[];e.getRectMinMax(m,x,f,b,E);const z=E[0],S=E[1];if(!(w.z-p>S||w.z+p<z))for(let l=m;l<f;l++)for(let h=x;h<b;h++){let u=!1;if(e.getConvexTrianglePillar(l,h,!1),g.pointToWorldFrame(s,o,e.pillarOffset,v),i.distanceTo(v)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(u=this.convexConvex(t,e.pillarConvex,i,v,n,o,r,a,null,null,c,y,null)),c&&u)return!0;if(e.getConvexTrianglePillar(l,h,!0),g.pointToWorldFrame(s,o,e.pillarOffset,v),i.distanceTo(v)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(u=this.convexConvex(t,e.pillarConvex,i,v,n,o,r,a,null,null,c,y,null)),c&&u)return!0}}sphereParticle(t,e,i,s,n,o,r,a,l,h,c){const u=$i;u.set(0,0,1),s.vsub(i,u);if(u.lengthSquared()<=t.radius*t.radius){if(c)return!0;const i=this.createContactEquation(a,r,e,t,l,h);u.normalize(),i.rj.copy(u),i.rj.scale(t.radius,i.rj),i.ni.copy(u),i.ni.negate(i.ni),i.ri.set(0,0,0),this.result.push(i),this.createFrictionEquationsFromContact(i,this.frictionResult)}}planeParticle(t,e,i,s,n,o,r,a,l,h,c){const u=Xi;u.set(0,0,1),r.quaternion.vmult(u,u);const d=Ki;s.vsub(r.position,d);if(u.dot(d)<=0){if(c)return!0;const i=this.createContactEquation(a,r,e,t,l,h);i.ni.copy(u),i.ni.negate(i.ni),i.ri.set(0,0,0);const n=Zi;u.scale(u.dot(s),n),s.vsub(n,n),i.rj.copy(n),this.result.push(i),this.createFrictionEquationsFromContact(i,this.frictionResult)}}boxParticle(t,e,i,s,n,o,r,a,l,h,c){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexParticle(t.convexPolyhedronRepresentation,e,i,s,n,o,r,a,t,e,c)}convexParticle(t,e,i,s,n,o,r,a,l,h,c){let u=-1;const d=ts,p=is;let v=null;const y=Ji;if(y.copy(s),y.vsub(i,y),n.conjugate(Qi),Qi.vmult(y,y),t.pointIsInside(y)){t.worldVerticesNeedsUpdate&&t.computeWorldVertices(i,n),t.worldFaceNormalsNeedsUpdate&&t.computeWorldFaceNormals(n);for(let e=0,i=t.faces.length;e!==i;e++){const i=[t.worldVertices[t.faces[e][0]]],n=t.worldFaceNormals[e];s.vsub(i[0],es);const o=-n.dot(es);if(null===v||Math.abs(o)<Math.abs(v)){if(c)return!0;v=o,u=e,d.copy(n)}}if(-1!==u){const n=this.createContactEquation(a,r,e,t,l,h);d.scale(v,p),p.vadd(s,p),p.vsub(i,p),n.rj.copy(p),d.negate(n.ni),n.ri.set(0,0,0);const o=n.ri,c=n.rj;o.vadd(s,o),o.vsub(a.position,o),c.vadd(i,c),c.vsub(r.position,c),this.result.push(n),this.createFrictionEquationsFromContact(n,this.frictionResult)}}}heightfieldCylinder(t,e,i,s,n,o,r,a,l,h,c){return this.convexHeightfield(e,t,s,i,o,n,a,r,l,h,c)}particleCylinder(t,e,i,s,n,o,r,a,l,h,c){return this.convexParticle(e,t,s,i,o,n,a,r,l,h,c)}sphereTrimesh(t,e,i,s,n,o,r,a,l,h,c){const u=ri,d=ai,p=li,v=hi,y=ci,w=ui,m=yi,f=oi,x=si,b=wi;g.pointToLocalFrame(s,o,i,y);const E=t.radius;m.lowerBound.set(y.x-E,y.y-E,y.z-E),m.upperBound.set(y.x+E,y.y+E,y.z+E),e.getTrianglesInAABB(m,b);const z=ni,S=t.radius*t.radius;for(let n=0;n<b.length;n++)for(let u=0;u<3;u++)if(e.getVertex(e.indices[3*b[n]+u],z),z.vsub(y,x),x.lengthSquared()<=S){if(f.copy(z),g.pointToWorldFrame(s,o,f,z),z.vsub(i,x),c)return!0;let n=this.createContactEquation(r,a,t,e,l,h);n.ni.copy(x),n.ni.normalize(),n.ri.copy(n.ni),n.ri.scale(t.radius,n.ri),n.ri.vadd(i,n.ri),n.ri.vsub(r.position,n.ri),n.rj.copy(z),n.rj.vsub(a.position,n.rj),this.result.push(n),this.createFrictionEquationsFromContact(n,this.frictionResult)}for(let n=0;n<b.length;n++)for(let m=0;m<3;m++){e.getVertex(e.indices[3*b[n]+m],u),e.getVertex(e.indices[3*b[n]+(m+1)%3],d),d.vsub(u,p),y.vsub(d,w);const f=w.dot(p);y.vsub(u,w);let x=w.dot(p);if(x>0&&f<0){y.vsub(u,w),v.copy(p),v.normalize(),x=w.dot(v),v.scale(x,w),w.vadd(u,w);if(w.distanceTo(y)<t.radius){if(c)return!0;const n=this.createContactEquation(r,a,t,e,l,h);w.vsub(y,n.ni),n.ni.normalize(),n.ni.scale(t.radius,n.ri),n.ri.vadd(i,n.ri),n.ri.vsub(r.position,n.ri),g.pointToWorldFrame(s,o,w,w),w.vsub(a.position,n.rj),g.vectorToWorldFrame(o,n.ni,n.ni),g.vectorToWorldFrame(o,n.ri,n.ri),this.result.push(n),this.createFrictionEquationsFromContact(n,this.frictionResult)}}}const B=di,A=pi,C=vi,M=ii;for(let n=0,u=b.length;n!==u;n++){e.getTriangleVertices(b[n],B,A,C),e.getNormal(b[n],M),y.vsub(B,w);let u=w.dot(M);if(M.scale(u,w),y.vsub(w,w),u=w.distanceTo(y),dt.pointInTriangle(w,B,A,C)&&u<t.radius){if(c)return!0;let n=this.createContactEquation(r,a,t,e,l,h);w.vsub(y,n.ni),n.ni.normalize(),n.ni.scale(t.radius,n.ri),n.ri.vadd(i,n.ri),n.ri.vsub(r.position,n.ri),g.pointToWorldFrame(s,o,w,w),w.vsub(a.position,n.rj),g.vectorToWorldFrame(o,n.ni,n.ni),g.vectorToWorldFrame(o,n.ri,n.ri),this.result.push(n),this.createFrictionEquationsFromContact(n,this.frictionResult)}}b.length=0}planeTrimesh(t,e,i,s,n,o,a,l,h,c,u){const d=new r,p=Je;p.set(0,0,1),n.vmult(p,p);for(let n=0;n<e.vertices.length/3;n++){e.getVertex(n,d);const v=new r;v.copy(d),g.pointToWorldFrame(s,o,v,d);const y=ti;d.vsub(i,y);if(p.dot(y)<=0){if(u)return!0;const i=this.createContactEquation(a,l,t,e,h,c);i.ni.copy(p);const s=ei;p.scale(y.dot(p),s),d.vsub(s,s),i.ri.copy(s),i.ri.vsub(a.position,i.ri),i.rj.copy(d),i.rj.vsub(l.position,i.rj),this.result.push(i),this.createFrictionEquationsFromContact(i,this.frictionResult)}}}}const _e=new r,Ye=new r,Xe=new r,Ke=new r,Ze=new r,$e=new y,Qe=new y,Je=new r,ti=new r,ei=new r,ii=new r,si=new r;new r;const ni=new r,oi=new r,ri=new r,ai=new r,li=new r,hi=new r,ci=new r,ui=new r,di=new r,pi=new r,vi=new r,yi=new c,wi=[],mi=new r,fi=new r,gi=new r,xi=new r,bi=new r;function Ei(t,e,i){let s=null;const n=t.length;for(let o=0;o!==n;o++){const r=t[o],a=gi;t[(o+1)%n].vsub(r,a);const l=xi;a.cross(e,l);const h=bi;i.vsub(r,h);const c=l.dot(h);if(!(null===s||c>0&&!0===s||c<=0&&!1===s))return!1;null===s&&(s=c>0)}return!0}const zi=new r,Si=new r,Bi=new r,Ai=new r,Ci=[new r,new r,new r,new r,new r,new r],Mi=new r,Fi=new r,qi=new r,Ni=new r,Ri=new r,Pi=new r,Ti=new r,Ii=new r,ji=new r,Li=new r,Oi=new r,Wi=new r,ki=new r,Vi=new r;new r,new r;const Hi=new r,Di=new r,Gi=new r,Ui=new r,_i=new r,Yi=new r,Xi=new r,Ki=new r,Zi=new r,$i=new r,Qi=new y,Ji=new r;new r;const ts=new r,es=new r,is=new r,ss=new r,ns=new r,os=[0],rs=new r,as=new r;class ls{constructor(){this.current=[],this.previous=[]}getKey(t,e){if(e<t){const i=e;e=t,t=i}return t<<16|e}set(t,e){const i=this.getKey(t,e),s=this.current;let n=0;for(;i>s[n];)n++;if(i!==s[n]){for(let t=s.length-1;t>=n;t--)s[t+1]=s[t];s[n]=i}}tick(){const t=this.current;this.current=this.previous,this.previous=t,this.current.length=0}getDiff(t,e){const i=this.current,s=this.previous,n=i.length,o=s.length;let r=0;for(let e=0;e<n;e++){let n=!1;const o=i[e];for(;o>s[r];)r++;n=o===s[r],n||hs(t,o)}r=0;for(let t=0;t<o;t++){let n=!1;const o=s[t];for(;o>i[r];)r++;n=i[r]===o,n||hs(e,o)}}}function hs(t,e){t.push((4294901760&e)>>16,65535&e)}const cs=(t,e)=>t<e?`${t}-${e}`:`${e}-${t}`;class us{constructor(){this.data={keys:[]}}get(t,e){const i=cs(t,e);return this.data[i]}set(t,e,i){const s=cs(t,e);this.get(t,e)||this.data.keys.push(s),this.data[s]=i}delete(t,e){const i=cs(t,e),s=this.data.keys.indexOf(i);-1!==s&&this.data.keys.splice(s,1),delete this.data[i]}reset(){const t=this.data,e=t.keys;for(;e.length>0;){delete t[e.pop()]}}}new c;const ds=new dt,ps=globalThis.performance||{};if(!ps.now){let t=Date.now();ps.timing&&ps.timing.navigationStart&&(t=ps.timing.navigationStart),ps.now=()=>Date.now()-t}new r;const vs={type:"postStep"},ys={type:"preStep"},ws={type:I.COLLIDE_EVENT_NAME,body:null,contact:null},ms=[],fs=[],gs=[],xs=[],bs=[],Es=[],zs={type:"beginContact",bodyA:null,bodyB:null},Ss={type:"endContact",bodyA:null,bodyB:null},Bs={type:"beginShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null},As={type:"endShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null};var Cs=i.p+"fd5f41214189aef9f730.mp3",Ms=i.p+"3dda3aeadb7b2f3e136c.mp3";document.title="".concat(window.location.pathname.slice(1)," 物理引擎");var Fs=new Audio(Cs),qs=new Audio(Ms),Ns=new s.xsS,Rs=new s.cPb(75,window.innerWidth/window.innerHeight,.1,1e3);Rs.position.set(0,0,40),Ns.add(Rs);var Ps=new s.xo$(1,32,32),Ts=new s.Wid({color:"#fff"}),Is=new s.Kj0(Ps,Ts);Is.castShadow=!0,Ns.add(Is);var js=new class extends v{constructor(t){void 0===t&&(t={}),super(),this.dt=-1,this.allowSleep=!!t.allowSleep,this.contacts=[],this.frictionEquations=[],this.quatNormalizeSkip=void 0!==t.quatNormalizeSkip?t.quatNormalizeSkip:0,this.quatNormalizeFast=void 0!==t.quatNormalizeFast&&t.quatNormalizeFast,this.time=0,this.stepnumber=0,this.default_dt=1/60,this.nextId=0,this.gravity=new r,t.gravity&&this.gravity.copy(t.gravity),t.frictionGravity&&(this.frictionGravity=new r,this.frictionGravity.copy(t.frictionGravity)),this.broadphase=void 0!==t.broadphase?t.broadphase:new tt,this.bodies=[],this.hasActiveBodies=!1,this.solver=void 0!==t.solver?t.solver:new ve,this.constraints=[],this.narrowphase=new Ue(this),this.collisionMatrix=new p,this.collisionMatrixPrevious=new p,this.bodyOverlapKeeper=new ls,this.shapeOverlapKeeper=new ls,this.contactmaterials=[],this.contactMaterialTable=new us,this.defaultMaterial=new ce("default"),this.defaultContactMaterial=new he(this.defaultMaterial,this.defaultMaterial,{friction:.3,restitution:0}),this.doProfiling=!1,this.profile={solve:0,makeContactConstraints:0,broadphase:0,integrate:0,narrowphase:0},this.accumulator=0,this.subsystems=[],this.addBodyEvent={type:"addBody",body:null},this.removeBodyEvent={type:"removeBody",body:null},this.idToBodyMap={},this.broadphase.setWorld(this)}getContactMaterial(t,e){return this.contactMaterialTable.get(t.id,e.id)}collisionMatrixTick(){const t=this.collisionMatrixPrevious;this.collisionMatrixPrevious=this.collisionMatrix,this.collisionMatrix=t,this.collisionMatrix.reset(),this.bodyOverlapKeeper.tick(),this.shapeOverlapKeeper.tick()}addConstraint(t){this.constraints.push(t)}removeConstraint(t){const e=this.constraints.indexOf(t);-1!==e&&this.constraints.splice(e,1)}rayTest(t,e,i){i instanceof et?this.raycastClosest(t,e,{skipBackfaces:!0},i):this.raycastAll(t,e,{skipBackfaces:!0},i)}raycastAll(t,e,i,s){return void 0===i&&(i={}),i.mode=dt.ALL,i.from=t,i.to=e,i.callback=s,ds.intersectWorld(this,i)}raycastAny(t,e,i,s){return void 0===i&&(i={}),i.mode=dt.ANY,i.from=t,i.to=e,i.result=s,ds.intersectWorld(this,i)}raycastClosest(t,e,i,s){return void 0===i&&(i={}),i.mode=dt.CLOSEST,i.from=t,i.to=e,i.result=s,ds.intersectWorld(this,i)}addBody(t){this.bodies.includes(t)||(t.index=this.bodies.length,this.bodies.push(t),t.world=this,t.initPosition.copy(t.position),t.initVelocity.copy(t.velocity),t.timeLastSleepy=this.time,t instanceof I&&(t.initAngularVelocity.copy(t.angularVelocity),t.initQuaternion.copy(t.quaternion)),this.collisionMatrix.setNumObjects(this.bodies.length),this.addBodyEvent.body=t,this.idToBodyMap[t.id]=t,this.dispatchEvent(this.addBodyEvent))}removeBody(t){t.world=null;const e=this.bodies.length-1,i=this.bodies,s=i.indexOf(t);if(-1!==s){i.splice(s,1);for(let t=0;t!==i.length;t++)i[t].index=t;this.collisionMatrix.setNumObjects(e),this.removeBodyEvent.body=t,delete this.idToBodyMap[t.id],this.dispatchEvent(this.removeBodyEvent)}}getBodyById(t){return this.idToBodyMap[t]}getShapeById(t){const e=this.bodies;for(let i=0;i<e.length;i++){const s=e[i].shapes;for(let e=0;e<s.length;e++){const i=s[e];if(i.id===t)return i}}return null}addContactMaterial(t){this.contactmaterials.push(t),this.contactMaterialTable.set(t.materials[0].id,t.materials[1].id,t)}removeContactMaterial(t){const e=this.contactmaterials.indexOf(t);-1!==e&&(this.contactmaterials.splice(e,1),this.contactMaterialTable.delete(t.materials[0].id,t.materials[1].id))}fixedStep(t,e){void 0===t&&(t=1/60),void 0===e&&(e=10);const i=ps.now()/1e3;if(this.lastCallTime){const s=i-this.lastCallTime;this.step(t,s,e)}else this.step(t,void 0,e);this.lastCallTime=i}step(t,e,i){if(void 0===i&&(i=10),void 0===e)this.internalStep(t),this.time+=t;else{this.accumulator+=e;const s=ps.now();let n=0;for(;this.accumulator>=t&&n<i&&(this.internalStep(t),this.accumulator-=t,n++,!(ps.now()-s>1e3*t)););this.accumulator=this.accumulator%t;const o=this.accumulator/t;for(let t=0;t!==this.bodies.length;t++){const e=this.bodies[t];e.previousPosition.lerp(e.position,o,e.interpolatedPosition),e.previousQuaternion.slerp(e.quaternion,o,e.interpolatedQuaternion),e.previousQuaternion.normalize()}this.time+=e}}internalStep(t){this.dt=t;const e=this.contacts,i=gs,s=xs,n=this.bodies.length,o=this.bodies,r=this.solver,a=this.gravity,l=this.doProfiling,h=this.profile,c=I.DYNAMIC;let u=-1/0;const d=this.constraints,p=fs;a.length();const v=a.x,y=a.y,w=a.z;let m=0;for(l&&(u=ps.now()),m=0;m!==n;m++){const t=o[m];if(t.type===c){const e=t.force,i=t.mass;e.x+=i*v,e.y+=i*y,e.z+=i*w}}for(let t=0,e=this.subsystems.length;t!==e;t++)this.subsystems[t].update();l&&(u=ps.now()),i.length=0,s.length=0,this.broadphase.collisionPairs(this,i,s),l&&(h.broadphase=ps.now()-u);let f=d.length;for(m=0;m!==f;m++){const t=d[m];if(!t.collideConnected)for(let e=i.length-1;e>=0;e-=1)(t.bodyA===i[e]&&t.bodyB===s[e]||t.bodyB===i[e]&&t.bodyA===s[e])&&(i.splice(e,1),s.splice(e,1))}this.collisionMatrixTick(),l&&(u=ps.now());const g=ms,x=e.length;for(m=0;m!==x;m++)g.push(e[m]);e.length=0;const b=this.frictionEquations.length;for(m=0;m!==b;m++)p.push(this.frictionEquations[m]);for(this.frictionEquations.length=0,this.narrowphase.getContacts(i,s,this,e,g,this.frictionEquations,p),l&&(h.narrowphase=ps.now()-u),l&&(u=ps.now()),m=0;m<this.frictionEquations.length;m++)r.addEquation(this.frictionEquations[m]);const E=e.length;for(let t=0;t!==E;t++){const i=e[t],s=i.bi,n=i.bj,o=i.si,a=i.sj;let l;if(l=s.material&&n.material&&this.getContactMaterial(s.material,n.material)||this.defaultContactMaterial,l.friction,s.material&&n.material&&(s.material.friction>=0&&n.material.friction>=0&&(s.material.friction,n.material.friction),s.material.restitution>=0&&n.material.restitution>=0&&(i.restitution=s.material.restitution*n.material.restitution)),r.addEquation(i),s.allowSleep&&s.type===I.DYNAMIC&&s.sleepState===I.SLEEPING&&n.sleepState===I.AWAKE&&n.type!==I.STATIC){n.velocity.lengthSquared()+n.angularVelocity.lengthSquared()>=2*n.sleepSpeedLimit**2&&(s.wakeUpAfterNarrowphase=!0)}if(n.allowSleep&&n.type===I.DYNAMIC&&n.sleepState===I.SLEEPING&&s.sleepState===I.AWAKE&&s.type!==I.STATIC){s.velocity.lengthSquared()+s.angularVelocity.lengthSquared()>=2*s.sleepSpeedLimit**2&&(n.wakeUpAfterNarrowphase=!0)}this.collisionMatrix.set(s,n,!0),this.collisionMatrixPrevious.get(s,n)||(ws.body=n,ws.contact=i,s.dispatchEvent(ws),ws.body=s,n.dispatchEvent(ws)),this.bodyOverlapKeeper.set(s.id,n.id),this.shapeOverlapKeeper.set(o.id,a.id)}for(this.emitContactEvents(),l&&(h.makeContactConstraints=ps.now()-u,u=ps.now()),m=0;m!==n;m++){const t=o[m];t.wakeUpAfterNarrowphase&&(t.wakeUp(),t.wakeUpAfterNarrowphase=!1)}for(f=d.length,m=0;m!==f;m++){const t=d[m];t.update();for(let e=0,i=t.equations.length;e!==i;e++){const i=t.equations[e];r.addEquation(i)}}r.solve(t,this),l&&(h.solve=ps.now()-u),r.removeAllEquations();const z=Math.pow;for(m=0;m!==n;m++){const e=o[m];if(e.type&c){const i=z(1-e.linearDamping,t),s=e.velocity;s.scale(i,s);const n=e.angularVelocity;if(n){const i=z(1-e.angularDamping,t);n.scale(i,n)}}}this.dispatchEvent(ys),l&&(u=ps.now());const S=this.stepnumber%(this.quatNormalizeSkip+1)==0,B=this.quatNormalizeFast;for(m=0;m!==n;m++)o[m].integrate(t,S,B);this.clearForces(),this.broadphase.dirty=!0,l&&(h.integrate=ps.now()-u),this.stepnumber+=1,this.dispatchEvent(vs);let A=!0;if(this.allowSleep)for(A=!1,m=0;m!==n;m++){const t=o[m];t.sleepTick(this.time),t.sleepState!==I.SLEEPING&&(A=!0)}this.hasActiveBodies=A}emitContactEvents(){const t=this.hasAnyEventListener("beginContact"),e=this.hasAnyEventListener("endContact");if((t||e)&&this.bodyOverlapKeeper.getDiff(bs,Es),t){for(let t=0,e=bs.length;t<e;t+=2)zs.bodyA=this.getBodyById(bs[t]),zs.bodyB=this.getBodyById(bs[t+1]),this.dispatchEvent(zs);zs.bodyA=zs.bodyB=null}if(e){for(let t=0,e=Es.length;t<e;t+=2)Ss.bodyA=this.getBodyById(Es[t]),Ss.bodyB=this.getBodyById(Es[t+1]),this.dispatchEvent(Ss);Ss.bodyA=Ss.bodyB=null}bs.length=Es.length=0;const i=this.hasAnyEventListener("beginShapeContact"),s=this.hasAnyEventListener("endShapeContact");if((i||s)&&this.shapeOverlapKeeper.getDiff(bs,Es),i){for(let t=0,e=bs.length;t<e;t+=2){const e=this.getShapeById(bs[t]),i=this.getShapeById(bs[t+1]);Bs.shapeA=e,Bs.shapeB=i,e&&(Bs.bodyA=e.body),i&&(Bs.bodyB=i.body),this.dispatchEvent(Bs)}Bs.bodyA=Bs.bodyB=Bs.shapeA=Bs.shapeB=null}if(s){for(let t=0,e=Es.length;t<e;t+=2){const e=this.getShapeById(Es[t]),i=this.getShapeById(Es[t+1]);As.shapeA=e,As.shapeB=i,e&&(As.bodyA=e.body),i&&(As.bodyB=i.body),this.dispatchEvent(As)}As.bodyA=As.bodyB=As.shapeA=As.shapeB=null}}clearForces(){const t=this.bodies,e=t.length;for(let i=0;i!==e;i++){const e=t[i];e.force,e.torque,e.force.set(0,0,0),e.torque.set(0,0,0)}}}({gravity:new r(0,-9.82,0)}),Ls=new ue(1),Os=new ce("ball"),Ws=new I({mass:1,position:new r(0,0,0),shape:Ls,material:Os});js.addBody(Ws);var ks=new s._12(20,20,32),Vs=new s.Wid,Hs=new s.Kj0(ks,Vs);Hs.rotation.x=-Math.PI/2,Hs.position.set(0,-8,0),Hs.receiveShadow=!0,Ns.add(Hs);var Ds=new class extends f{constructor(){super({type:f.types.PLANE}),this.worldNormal=new r,this.worldNormalNeedsUpdate=!0,this.boundingSphereRadius=Number.MAX_VALUE}computeWorldNormal(t){const e=this.worldNormal;e.set(0,0,1),t.vmult(e,e),this.worldNormalNeedsUpdate=!1}calculateLocalInertia(t,e){return void 0===e&&(e=new r),e}volume(){return Number.MAX_VALUE}calculateWorldAABB(t,e,i,s){de.set(0,0,1),e.vmult(de,de);const n=Number.MAX_VALUE;i.set(-n,-n,-n),s.set(n,n,n),1===de.x?s.x=t.x:-1===de.x&&(i.x=t.x),1===de.y?s.y=t.y:-1===de.y&&(i.y=t.y),1===de.z?s.z=t.z:-1===de.z&&(i.z=t.z)}updateBoundingSphereRadius(){this.boundingSphereRadius=Number.MAX_VALUE}},Gs=new ce,Us=new I({type:I.STATIC,shape:Ds,material:Gs});Us.position.set(0,-8,0),Us.quaternion.setFromEuler(-Math.PI/2,0,0),js.addBody(Us);var _s=new s.Wid,Ys=new ce,Xs=[];window.addEventListener("click",(function(){var t=new s.DvJ(1,1,1),e=new s.Kj0(t,_s);e.position.set(0,8,0),e.receiveShadow=!0,Ns.add(e);var i=new A(new r(.5,.5,.5)),n=new I({mass:1,shape:i,material:Ys});n.applyLocalForce(new r(100-200*Math.random(),0,100-200*Math.random()),new r(0,0,0)),n.position.set(0,8,0),js.addBody(n),n.addEventListener("collide",(function(t){var e=t.contact.getImpactVelocityAlongNormal();e>5&&(qs.currentTime=0,qs.volume=e/25,qs.play())})),Xs.push({mesh:e,body:n})}));var Ks=new he(Os,Gs,{friction:.1,restitution:.7});js.addContactMaterial(Ks);var Zs=new s.Mig(4210752);Ns.add(Zs);var $s=new s.PMe(16777215,2,100,Math.PI/4,.5,2);$s.castShadow=!0,$s.position.set(10,20,10),$s.shadow.camera.near=5,$s.shadow.camera.far=10,$s.shadow.camera.fov=30,Ns.add($s);var Qs=new s.CP7({alpha:!0});Qs.setSize(window.innerWidth,window.innerHeight),document.body.appendChild(Qs.domElement),Qs.shadowMap.enabled=!0;var Js=function(){js.fixedStep(),Is.position.copy(Ws.position),Is.quaternion.copy(Ws.quaternion),Xs.forEach((function(t){t.mesh.position.copy(t.body.position),t.mesh.quaternion.copy(t.body.quaternion)})),Qs.render(Ns,Rs),requestAnimationFrame(Js)};Js(),window.addEventListener("resize",(function(){Rs.aspect=window.innerWidth/window.innerHeight,Rs.updateProjectionMatrix(),Qs.setSize(window.innerWidth,window.innerHeight)})),Ws.addEventListener("collide",(function(t){var e=t.contact.getImpactVelocityAlongNormal();e>5&&(Fs.currentTime=0,Fs.volume=e/25,Fs.play())}))}},function(t){var e=function(e){return t(t.s=e)};t.O(0,[736,592],(function(){return e(3662),e(8188),e(7633),e(8896)}));t.O()}]);